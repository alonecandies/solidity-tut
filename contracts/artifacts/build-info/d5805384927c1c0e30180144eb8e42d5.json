{
	"id": "d5805384927c1c0e30180144eb8e42d5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/3_Ballot.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\n/** \n * @title Ballot\n * @dev Implements voting process along with vote delegation\n */\ncontract Ballot {\n\n    struct Voter {\n        uint weight; // weight is accumulated by delegation\n        bool voted;  // if true, that person already voted\n        address delegate; // person delegated to\n        uint vote;   // index of the voted proposal\n    }\n\n    struct Proposal {\n        // If you can limit the length to a certain number of bytes, \n        // always use one of bytes1 to bytes32 because they are much cheaper\n        bytes32 name;   // short name (up to 32 bytes)\n        uint voteCount; // number of accumulated votes\n    }\n\n    address public chairperson;\n\n    mapping(address => Voter) public voters;\n\n    Proposal[] public proposals;\n\n    /** \n     * @dev Create a new ballot to choose one of 'proposalNames'.\n     * @param proposalNames names of proposals\n     */\n    constructor(bytes32[] memory proposalNames) {\n        chairperson = msg.sender;\n        voters[chairperson].weight = 1;\n\n        for (uint i = 0; i < proposalNames.length; i++) {\n            // 'Proposal({...})' creates a temporary\n            // Proposal object and 'proposals.push(...)'\n            // appends it to the end of 'proposals'.\n            proposals.push(Proposal({\n                name: proposalNames[i],\n                voteCount: 0\n            }));\n        }\n    }\n\n    /** \n     * @dev Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.\n     * @param voter address of voter\n     */\n    function giveRightToVote(address voter) public {\n        require(\n            msg.sender == chairperson,\n            \"Only chairperson can give right to vote.\"\n        );\n        require(\n            !voters[voter].voted,\n            \"The voter already voted.\"\n        );\n        require(voters[voter].weight == 0);\n        voters[voter].weight = 1;\n    }\n\n    /**\n     * @dev Delegate your vote to the voter 'to'.\n     * @param to address to which vote is delegated\n     */\n    function delegate(address to) public {\n        Voter storage sender = voters[msg.sender];\n        require(!sender.voted, \"You already voted.\");\n        require(to != msg.sender, \"Self-delegation is disallowed.\");\n\n        while (voters[to].delegate != address(0)) {\n            to = voters[to].delegate;\n\n            // We found a loop in the delegation, not allowed.\n            require(to != msg.sender, \"Found loop in delegation.\");\n        }\n        sender.voted = true;\n        sender.delegate = to;\n        Voter storage delegate_ = voters[to];\n        if (delegate_.voted) {\n            // If the delegate already voted,\n            // directly add to the number of votes\n            proposals[delegate_.vote].voteCount += sender.weight;\n        } else {\n            // If the delegate did not vote yet,\n            // add to her weight.\n            delegate_.weight += sender.weight;\n        }\n    }\n\n    /**\n     * @dev Give your vote (including votes delegated to you) to proposal 'proposals[proposal].name'.\n     * @param proposal index of proposal in the proposals array\n     */\n    function vote(uint proposal) public {\n        Voter storage sender = voters[msg.sender];\n        require(sender.weight != 0, \"Has no right to vote\");\n        require(!sender.voted, \"Already voted.\");\n        sender.voted = true;\n        sender.vote = proposal;\n\n        // If 'proposal' is out of the range of the array,\n        // this will throw automatically and revert all\n        // changes.\n        proposals[proposal].voteCount += sender.weight;\n    }\n\n    /** \n     * @dev Computes the winning proposal taking all previous votes into account.\n     * @return winningProposal_ index of winning proposal in the proposals array\n     */\n    function winningProposal() public view\n            returns (uint winningProposal_)\n    {\n        uint winningVoteCount = 0;\n        for (uint p = 0; p < proposals.length; p++) {\n            if (proposals[p].voteCount > winningVoteCount) {\n                winningVoteCount = proposals[p].voteCount;\n                winningProposal_ = p;\n            }\n        }\n    }\n\n    /** \n     * @dev Calls winningProposal() function to get the index of the winner contained in the proposals array and then\n     * @return winnerName_ the name of the winner\n     */\n    function winnerName() public view\n            returns (bytes32 winnerName_)\n    {\n        winnerName_ = proposals[winningProposal()].name;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/3_Ballot.sol": {
				"Ballot": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "proposalNames",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "chairperson",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "giveRightToVote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "voteCount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposal",
									"type": "uint256"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "voters",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "voted",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "vote",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnerName",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "winnerName_",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winningProposal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "winningProposal_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implements voting process along with vote delegation",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Create a new ballot to choose one of 'proposalNames'.",
								"params": {
									"proposalNames": "names of proposals"
								}
							},
							"delegate(address)": {
								"details": "Delegate your vote to the voter 'to'.",
								"params": {
									"to": "address to which vote is delegated"
								}
							},
							"giveRightToVote(address)": {
								"details": "Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.",
								"params": {
									"voter": "address of voter"
								}
							},
							"vote(uint256)": {
								"details": "Give your vote (including votes delegated to you) to proposal 'proposals[proposal].name'.",
								"params": {
									"proposal": "index of proposal in the proposals array"
								}
							},
							"winnerName()": {
								"details": "Calls winningProposal() function to get the index of the winner contained in the proposals array and then",
								"returns": {
									"winnerName_": "the name of the winner"
								}
							},
							"winningProposal()": {
								"details": "Computes the winning proposal taking all previous votes into account.",
								"returns": {
									"winningProposal_": "index of winning proposal in the proposals array"
								}
							}
						},
						"title": "Ballot",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/3_Ballot.sol\":157:4512  contract Ballot {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/3_Ballot.sol\":955:1436  constructor(bytes32[] memory proposalNames) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/3_Ballot.sol\":1009:1020  chairperson */\n  0x00\n    /* \"contracts/3_Ballot.sol\":1009:1033  chairperson = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/3_Ballot.sol\":1023:1033  msg.sender */\n  caller\n    /* \"contracts/3_Ballot.sol\":1009:1033  chairperson = msg.sender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/3_Ballot.sol\":1043:1062  voters[chairperson] */\n  dup2\n  mstore\n    /* \"contracts/3_Ballot.sol\":1009:1033  chairperson = msg.sender */\n  0x01\n    /* \"contracts/3_Ballot.sol\":1043:1062  voters[chairperson] */\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup3\n  keccak256\n    /* \"contracts/3_Ballot.sol\":1043:1073  voters[chairperson].weight = 1 */\n  sstore\n    /* \"contracts/3_Ballot.sol\":1084:1430  for (uint i = 0; i < proposalNames.length; i++) {... */\ntag_6:\n    /* \"contracts/3_Ballot.sol\":1105:1118  proposalNames */\n  dup2\n    /* \"contracts/3_Ballot.sol\":1105:1125  proposalNames.length */\n  mload\n    /* \"contracts/3_Ballot.sol\":1101:1102  i */\n  dup2\n    /* \"contracts/3_Ballot.sol\":1101:1125  i < proposalNames.length */\n  lt\n    /* \"contracts/3_Ballot.sol\":1084:1430  for (uint i = 0; i < proposalNames.length; i++) {... */\n  iszero\n  tag_7\n  jumpi\n    /* \"contracts/3_Ballot.sol\":1309:1318  proposals */\n  0x02\n    /* \"contracts/3_Ballot.sol\":1324:1418  Proposal({... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"contracts/3_Ballot.sol\":1357:1370  proposalNames */\n  dup5\n    /* \"contracts/3_Ballot.sol\":1371:1372  i */\n  dup5\n    /* \"contracts/3_Ballot.sol\":1357:1373  proposalNames[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_10\n  jumpi\n  tag_10\n  tag_11\n  jump\t// in\ntag_10:\n  0x20\n  swap1\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  dup2\n  add\n  mload\n    /* \"contracts/3_Ballot.sol\":1324:1418  Proposal({... */\n  dup3\n  mstore\n    /* \"contracts/3_Ballot.sol\":1402:1403  0 */\n  0x00\n    /* \"contracts/3_Ballot.sol\":1324:1418  Proposal({... */\n  swap2\n  dup2\n  add\n  dup3\n  swap1\n  mstore\n    /* \"contracts/3_Ballot.sol\":1309:1419  proposals.push(Proposal({... */\n  dup4\n  sload\n  0x01\n  dup2\n  dup2\n  add\n  dup7\n  sstore\n  swap5\n  dup4\n  mstore\n  swap2\n  dup2\n  swap1\n  keccak256\n  dup4\n  mload\n  0x02\n  swap1\n  swap4\n  mul\n  add\n  swap2\n  dup3\n  sstore\n  swap2\n  swap1\n  swap2\n  add\n  mload\n  swap2\n  add\n  sstore\n    /* \"contracts/3_Ballot.sol\":1127:1130  i++ */\n  dup1\n  tag_13\n  dup2\n  tag_14\n  jump\t// in\ntag_13:\n  swap2\n  pop\n  pop\n    /* \"contracts/3_Ballot.sol\":1084:1430  for (uint i = 0; i < proposalNames.length; i++) {... */\n  jump(tag_6)\ntag_7:\n  pop\n    /* \"contracts/3_Ballot.sol\":955:1436  constructor(bytes32[] memory proposalNames) {... */\n  pop\n    /* \"contracts/3_Ballot.sol\":157:4512  contract Ballot {... */\n  jump(tag_17)\n    /* \"#utility.yul\":14:141   */\ntag_16:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1251   */\ntag_3:\n    /* \"#utility.yul\":241:247   */\n  0x00\n    /* \"#utility.yul\":272:274   */\n  0x20\n    /* \"#utility.yul\":315:317   */\n  dup1\n    /* \"#utility.yul\":303:312   */\n  dup4\n    /* \"#utility.yul\":294:301   */\n  dup6\n    /* \"#utility.yul\":290:313   */\n  sub\n    /* \"#utility.yul\":286:318   */\n  slt\n    /* \"#utility.yul\":283:335   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":331:332   */\n  0x00\n    /* \"#utility.yul\":328:329   */\n  dup1\n    /* \"#utility.yul\":321:333   */\n  revert\n    /* \"#utility.yul\":283:335   */\ntag_20:\n    /* \"#utility.yul\":358:374   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":423:437   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":420:454   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":450:451   */\n  0x00\n    /* \"#utility.yul\":447:448   */\n  dup1\n    /* \"#utility.yul\":440:452   */\n  revert\n    /* \"#utility.yul\":420:454   */\ntag_21:\n    /* \"#utility.yul\":488:494   */\n  dup2\n    /* \"#utility.yul\":477:486   */\n  dup6\n    /* \"#utility.yul\":473:495   */\n  add\n    /* \"#utility.yul\":463:495   */\n  swap2\n  pop\n    /* \"#utility.yul\":533:540   */\n  dup6\n    /* \"#utility.yul\":526:530   */\n  0x1f\n    /* \"#utility.yul\":522:524   */\n  dup4\n    /* \"#utility.yul\":518:531   */\n  add\n    /* \"#utility.yul\":514:541   */\n  slt\n    /* \"#utility.yul\":504:559   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":555:556   */\n  0x00\n    /* \"#utility.yul\":552:553   */\n  dup1\n    /* \"#utility.yul\":545:557   */\n  revert\n    /* \"#utility.yul\":504:559   */\ntag_22:\n    /* \"#utility.yul\":584:586   */\n  dup2\n    /* \"#utility.yul\":578:587   */\n  mload\n    /* \"#utility.yul\":606:608   */\n  dup2\n    /* \"#utility.yul\":602:604   */\n  dup2\n    /* \"#utility.yul\":599:609   */\n  gt\n    /* \"#utility.yul\":596:632   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":612:630   */\n  tag_24\n  tag_16\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":658:660   */\n  dup1\n    /* \"#utility.yul\":655:656   */\n  0x05\n    /* \"#utility.yul\":651:661   */\n  shl\n    /* \"#utility.yul\":690:692   */\n  0x40\n    /* \"#utility.yul\":684:693   */\n  mload\n    /* \"#utility.yul\":753:755   */\n  0x1f\n    /* \"#utility.yul\":749:756   */\n  not\n    /* \"#utility.yul\":744:746   */\n  0x3f\n    /* \"#utility.yul\":740:742   */\n  dup4\n    /* \"#utility.yul\":736:747   */\n  add\n    /* \"#utility.yul\":732:757   */\n  and\n    /* \"#utility.yul\":724:730   */\n  dup2\n    /* \"#utility.yul\":720:758   */\n  add\n    /* \"#utility.yul\":808:814   */\n  dup2\n    /* \"#utility.yul\":796:806   */\n  dup2\n    /* \"#utility.yul\":793:815   */\n  lt\n    /* \"#utility.yul\":788:790   */\n  dup6\n    /* \"#utility.yul\":776:786   */\n  dup3\n    /* \"#utility.yul\":773:791   */\n  gt\n    /* \"#utility.yul\":770:816   */\n  or\n    /* \"#utility.yul\":767:839   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":819:837   */\n  tag_26\n  tag_16\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":855:857   */\n  0x40\n    /* \"#utility.yul\":848:870   */\n  mstore\n    /* \"#utility.yul\":905:923   */\n  swap2\n  dup3\n  mstore\n    /* \"#utility.yul\":939:954   */\n  dup5\n  dup3\n  add\n  swap3\n  pop\n    /* \"#utility.yul\":981:992   */\n  dup4\n  dup2\n  add\n    /* \"#utility.yul\":977:997   */\n  dup6\n  add\n  swap2\n    /* \"#utility.yul\":1009:1028   */\n  dup9\n  dup4\n  gt\n    /* \"#utility.yul\":1006:1045   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1041:1042   */\n  0x00\n    /* \"#utility.yul\":1038:1039   */\n  dup1\n    /* \"#utility.yul\":1031:1043   */\n  revert\n    /* \"#utility.yul\":1006:1045   */\ntag_27:\n    /* \"#utility.yul\":1065:1076   */\n  swap4\n  dup6\n  add\n  swap4\n    /* \"#utility.yul\":1085:1220   */\ntag_28:\n    /* \"#utility.yul\":1101:1107   */\n  dup3\n    /* \"#utility.yul\":1096:1099   */\n  dup6\n    /* \"#utility.yul\":1093:1108   */\n  lt\n    /* \"#utility.yul\":1085:1220   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1167:1177   */\n  dup5\n  mload\n    /* \"#utility.yul\":1155:1178   */\n  dup5\n  mstore\n    /* \"#utility.yul\":1118:1130   */\n  swap4\n  dup6\n  add\n  swap4\n    /* \"#utility.yul\":1198:1210   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":1085:1220   */\n  jump(tag_28)\ntag_30:\n    /* \"#utility.yul\":1239:1245   */\n  swap9\n    /* \"#utility.yul\":146:1251   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1256:1383   */\ntag_11:\n    /* \"#utility.yul\":1317:1327   */\n  0x4e487b71\n    /* \"#utility.yul\":1312:1315   */\n  0xe0\n    /* \"#utility.yul\":1308:1328   */\n  shl\n    /* \"#utility.yul\":1305:1306   */\n  0x00\n    /* \"#utility.yul\":1298:1329   */\n  mstore\n    /* \"#utility.yul\":1348:1352   */\n  0x32\n    /* \"#utility.yul\":1345:1346   */\n  0x04\n    /* \"#utility.yul\":1338:1353   */\n  mstore\n    /* \"#utility.yul\":1372:1376   */\n  0x24\n    /* \"#utility.yul\":1369:1370   */\n  0x00\n    /* \"#utility.yul\":1362:1377   */\n  revert\n    /* \"#utility.yul\":1388:1620   */\ntag_14:\n    /* \"#utility.yul\":1427:1430   */\n  0x00\n    /* \"#utility.yul\":1448:1465   */\n  0x01\n  dup3\n  add\n    /* \"#utility.yul\":1445:1585   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1507:1517   */\n  0x4e487b71\n    /* \"#utility.yul\":1502:1505   */\n  0xe0\n    /* \"#utility.yul\":1498:1518   */\n  shl\n    /* \"#utility.yul\":1495:1496   */\n  0x00\n    /* \"#utility.yul\":1488:1519   */\n  mstore\n    /* \"#utility.yul\":1542:1546   */\n  0x11\n    /* \"#utility.yul\":1539:1540   */\n  0x04\n    /* \"#utility.yul\":1532:1547   */\n  mstore\n    /* \"#utility.yul\":1570:1574   */\n  0x24\n    /* \"#utility.yul\":1567:1568   */\n  0x00\n    /* \"#utility.yul\":1560:1575   */\n  revert\n    /* \"#utility.yul\":1445:1585   */\ntag_33:\n  pop\n    /* \"#utility.yul\":1612:1613   */\n  0x01\n    /* \"#utility.yul\":1601:1614   */\n  add\n  swap1\n    /* \"#utility.yul\":1388:1620   */\n  jump\t// out\ntag_17:\n    /* \"contracts/3_Ballot.sol\":157:4512  contract Ballot {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/3_Ballot.sol\":157:4512  contract Ballot {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x609ff1bd\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x609ff1bd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9e7b8d61\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa3ec138d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe2ba53f0\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x0121b93f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x013cf08b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e4176cf\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/3_Ballot.sol\":3166:3624  function vote(uint proposal) public {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/3_Ballot.sol\":791:818  Proposal[] public proposals */\n    tag_4:\n      tag_16\n      tag_17\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n    tag_16:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":373:398   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":429:431   */\n      0x20\n        /* \"#utility.yul\":414:432   */\n      dup4\n      add\n        /* \"#utility.yul\":407:441   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":346:364   */\n      add\n        /* \"contracts/3_Ballot.sol\":791:818  Proposal[] public proposals */\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Ballot.sol\":712:738  address public chairperson */\n    tag_5:\n      sload(0x00)\n      tag_21\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_21:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":616:648   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":598:649   */\n      dup2\n      mstore\n        /* \"#utility.yul\":586:588   */\n      0x20\n        /* \"#utility.yul\":571:589   */\n      add\n        /* \"contracts/3_Ballot.sol\":712:738  address public chairperson */\n      tag_19\n        /* \"#utility.yul\":452:655   */\n      jump\n        /* \"contracts/3_Ballot.sol\":2071:2978  function delegate(address to) public {... */\n    tag_6:\n      tag_12\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n        /* \"contracts/3_Ballot.sol\":3810:4175  function winningProposal() public view... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":1097:1122   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1085:1087   */\n      0x20\n        /* \"#utility.yul\":1070:1088   */\n      add\n        /* \"contracts/3_Ballot.sol\":3810:4175  function winningProposal() public view... */\n      tag_19\n        /* \"#utility.yul\":951:1128   */\n      jump\n        /* \"contracts/3_Ballot.sol\":1592:1947  function giveRightToVote(address voter) public {... */\n    tag_8:\n      tag_12\n      tag_34\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n        /* \"contracts/3_Ballot.sol\":745:784  mapping(address => Voter) public voters */\n    tag_9:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_37:\n      0x01\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      swap2\n      dup2\n      add\n      sload\n      0x02\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      dup3\n      and\n      swap2\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup5\n      jump\n    tag_36:\n      mload(0x40)\n      tag_19\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":1358:1383   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":1426:1440   */\n      swap2\n      iszero\n        /* \"#utility.yul\":1419:1441   */\n      iszero\n        /* \"#utility.yul\":1414:1416   */\n      0x20\n        /* \"#utility.yul\":1399:1417   */\n      dup5\n      add\n        /* \"#utility.yul\":1392:1442   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1478:1510   */\n      and\n        /* \"#utility.yul\":1473:1475   */\n      0x40\n        /* \"#utility.yul\":1458:1476   */\n      dup4\n      add\n        /* \"#utility.yul\":1451:1511   */\n      mstore\n        /* \"#utility.yul\":1542:1544   */\n      0x60\n        /* \"#utility.yul\":1527:1545   */\n      dup3\n      add\n        /* \"#utility.yul\":1520:1554   */\n      mstore\n        /* \"#utility.yul\":1345:1348   */\n      0x80\n        /* \"#utility.yul\":1330:1349   */\n      add\n      swap1\n        /* \"#utility.yul\":1133:1560   */\n      jump\n        /* \"contracts/3_Ballot.sol\":4366:4510  function winnerName() public view... */\n    tag_10:\n      tag_29\n      tag_42\n      jump\t// in\n        /* \"contracts/3_Ballot.sol\":3166:3624  function vote(uint proposal) public {... */\n    tag_15:\n        /* \"contracts/3_Ballot.sol\":3242:3252  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":3212:3232  Voter storage sender */\n      0x00\n        /* \"contracts/3_Ballot.sol\":3235:3253  voters[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/3_Ballot.sol\":3235:3241  voters */\n      0x01\n        /* \"contracts/3_Ballot.sol\":3235:3253  voters[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/3_Ballot.sol\":3271:3284  sender.weight */\n      dup1\n      sload\n        /* \"contracts/3_Ballot.sol\":3235:3253  voters[msg.sender] */\n      swap1\n      swap2\n        /* \"contracts/3_Ballot.sol\":3271:3289  sender.weight != 0 */\n      sub\n        /* \"contracts/3_Ballot.sol\":3263:3314  require(sender.weight != 0, \"Has no right to vote\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1949:1951   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":3263:3314  require(sender.weight != 0, \"Has no right to vote\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1931:1952   */\n      mstore\n        /* \"#utility.yul\":1988:1990   */\n      0x14\n        /* \"#utility.yul\":1968:1986   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1961:1991   */\n      mstore\n      shl(0x60, 0x486173206e6f20726967687420746f20766f7465)\n        /* \"#utility.yul\":2007:2025   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2000:2050   */\n      mstore\n        /* \"#utility.yul\":2067:2085   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":3263:3314  require(sender.weight != 0, \"Has no right to vote\") */\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"contracts/3_Ballot.sol\":3333:3345  sender.voted */\n      0x01\n      dup2\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/3_Ballot.sol\":3332:3345  !sender.voted */\n      iszero\n        /* \"contracts/3_Ballot.sol\":3324:3364  require(!sender.voted, \"Already voted.\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2298:2300   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":3324:3364  require(!sender.voted, \"Already voted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2280:2301   */\n      mstore\n        /* \"#utility.yul\":2337:2339   */\n      0x0e\n        /* \"#utility.yul\":2317:2335   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2310:2340   */\n      mstore\n      shl(0x91, 0x20b63932b0b23c903b37ba32b217)\n        /* \"#utility.yul\":2356:2374   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2349:2393   */\n      mstore\n        /* \"#utility.yul\":2410:2428   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":3324:3364  require(!sender.voted, \"Already voted.\") */\n      tag_47\n        /* \"#utility.yul\":2096:2434   */\n      jump\n        /* \"contracts/3_Ballot.sol\":3324:3364  require(!sender.voted, \"Already voted.\") */\n    tag_49:\n        /* \"contracts/3_Ballot.sol\":3389:3393  true */\n      0x01\n        /* \"contracts/3_Ballot.sol\":3374:3386  sender.voted */\n      dup2\n      dup2\n      add\n        /* \"contracts/3_Ballot.sol\":3374:3393  sender.voted = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/3_Ballot.sol\":3403:3414  sender.vote */\n      0x02\n      dup1\n      dup3\n      add\n        /* \"contracts/3_Ballot.sol\":3403:3425  sender.vote = proposal */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/3_Ballot.sol\":3604:3617  sender.weight */\n      dup2\n      sload\n        /* \"contracts/3_Ballot.sol\":3571:3590  proposals[proposal] */\n      dup2\n      sload\n        /* \"contracts/3_Ballot.sol\":3604:3617  sender.weight */\n      swap1\n      swap2\n        /* \"contracts/3_Ballot.sol\":3403:3414  sender.vote */\n      swap1\n        /* \"contracts/3_Ballot.sol\":3417:3425  proposal */\n      dup5\n      swap1\n        /* \"contracts/3_Ballot.sol\":3571:3590  proposals[proposal] */\n      dup2\n      lt\n      tag_53\n      jumpi\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":3571:3600  proposals[proposal].voteCount */\n      0x01\n      add\n      0x00\n        /* \"contracts/3_Ballot.sol\":3571:3617  proposals[proposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/3_Ballot.sol\":3166:3624  function vote(uint proposal) public {... */\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":791:818  Proposal[] public proposals */\n    tag_18:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      swap1\n      swap2\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":2071:2978  function delegate(address to) public {... */\n    tag_28:\n        /* \"contracts/3_Ballot.sol\":2148:2158  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":2118:2138  Voter storage sender */\n      0x00\n        /* \"contracts/3_Ballot.sol\":2141:2159  voters[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/3_Ballot.sol\":2141:2147  voters */\n      0x01\n        /* \"contracts/3_Ballot.sol\":2141:2159  voters[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/3_Ballot.sol\":2178:2190  sender.voted */\n      swap1\n      dup2\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/3_Ballot.sol\":2177:2190  !sender.voted */\n      iszero\n        /* \"contracts/3_Ballot.sol\":2169:2213  require(!sender.voted, \"You already voted.\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3035:3037   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":2169:2213  require(!sender.voted, \"You already voted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3017:3038   */\n      mstore\n        /* \"#utility.yul\":3074:3076   */\n      0x12\n        /* \"#utility.yul\":3054:3072   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3047:3077   */\n      mstore\n      shl(0x71, 0x2cb7ba9030b63932b0b23c903b37ba32b217)\n        /* \"#utility.yul\":3093:3111   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3086:3134   */\n      mstore\n        /* \"#utility.yul\":3151:3169   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":2169:2213  require(!sender.voted, \"You already voted.\") */\n      tag_47\n        /* \"#utility.yul\":2833:3175   */\n      jump\n        /* \"contracts/3_Ballot.sol\":2169:2213  require(!sender.voted, \"You already voted.\") */\n    tag_61:\n        /* \"contracts/3_Ballot.sol\":2237:2247  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/3_Ballot.sol\":2231:2247  to != msg.sender */\n      dup4\n      and\n      sub\n        /* \"contracts/3_Ballot.sol\":2223:2282  require(to != msg.sender, \"Self-delegation is disallowed.\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3382:3384   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":2223:2282  require(to != msg.sender, \"Self-delegation is disallowed.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3364:3385   */\n      mstore\n        /* \"#utility.yul\":3421:3423   */\n      0x1e\n        /* \"#utility.yul\":3401:3419   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3394:3424   */\n      mstore\n        /* \"#utility.yul\":3460:3492   */\n      0x53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e0000\n        /* \"#utility.yul\":3440:3458   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3433:3493   */\n      mstore\n        /* \"#utility.yul\":3510:3528   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":2223:2282  require(to != msg.sender, \"Self-delegation is disallowed.\") */\n      tag_47\n        /* \"#utility.yul\":3180:3534   */\n      jump\n        /* \"contracts/3_Ballot.sol\":2223:2282  require(to != msg.sender, \"Self-delegation is disallowed.\") */\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/3_Ballot.sol\":2300:2310  voters[to] */\n      dup3\n      dup2\n      and\n        /* \"contracts/3_Ballot.sol\":2331:2332  0 */\n      0x00\n        /* \"contracts/3_Ballot.sol\":2300:2310  voters[to] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/3_Ballot.sol\":2300:2306  voters */\n      0x01\n        /* \"contracts/3_Ballot.sol\":2300:2310  voters[to] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/3_Ballot.sol\":2300:2319  voters[to].delegate */\n      add\n      sload\n      0x0100\n      swap1\n      div\n      and\n        /* \"contracts/3_Ballot.sol\":2300:2333  voters[to].delegate != address(0) */\n      iszero\n        /* \"contracts/3_Ballot.sol\":2293:2516  while (voters[to].delegate != address(0)) {... */\n      tag_68\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/3_Ballot.sol\":2354:2364  voters[to] */\n      swap2\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/3_Ballot.sol\":2354:2360  voters */\n      0x01\n        /* \"contracts/3_Ballot.sol\":2354:2364  voters[to] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/3_Ballot.sol\":2354:2373  voters[to].delegate */\n      add\n      sload\n      0x0100\n      swap1\n      div\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/3_Ballot.sol\":2465:2475  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":2459:2475  to != msg.sender */\n      dup3\n      sub\n        /* \"contracts/3_Ballot.sol\":2451:2505  require(to != msg.sender, \"Found loop in delegation.\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3741:3743   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":2451:2505  require(to != msg.sender, \"Found loop in delegation.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3723:3744   */\n      mstore\n        /* \"#utility.yul\":3780:3782   */\n      0x19\n        /* \"#utility.yul\":3760:3778   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3753:3783   */\n      mstore\n        /* \"#utility.yul\":3819:3846   */\n      0x466f756e64206c6f6f7020696e2064656c65676174696f6e2e00000000000000\n        /* \"#utility.yul\":3799:3817   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3792:3847   */\n      mstore\n        /* \"#utility.yul\":3864:3882   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":2451:2505  require(to != msg.sender, \"Found loop in delegation.\") */\n      tag_47\n        /* \"#utility.yul\":3539:3888   */\n      jump\n        /* \"contracts/3_Ballot.sol\":2451:2505  require(to != msg.sender, \"Found loop in delegation.\") */\n    tag_69:\n        /* \"contracts/3_Ballot.sol\":2293:2516  while (voters[to].delegate != address(0)) {... */\n      jump(tag_64)\n    tag_68:\n        /* \"contracts/3_Ballot.sol\":2540:2544  true */\n      0x01\n        /* \"contracts/3_Ballot.sol\":2525:2537  sender.voted */\n      dup2\n      dup2\n      add\n        /* \"contracts/3_Ballot.sol\":2525:2544  sender.voted = true */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x01))\n        /* \"contracts/3_Ballot.sol\":2554:2574  sender.delegate = to */\n      and\n        /* \"contracts/3_Ballot.sol\":2525:2544  sender.voted = true */\n      0x0100\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/3_Ballot.sol\":2554:2574  sender.delegate = to */\n      dup7\n      and\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      dup4\n      or\n      swap1\n      swap2\n      sstore\n      0x00\n        /* \"contracts/3_Ballot.sol\":2610:2620  voters[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup3\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/3_Ballot.sol\":2634:2649  delegate_.voted */\n      swap1\n      dup2\n      add\n      sload\n        /* \"contracts/3_Ballot.sol\":2525:2544  sender.voted = true */\n      0xff\n        /* \"contracts/3_Ballot.sol\":2634:2649  delegate_.voted */\n      and\n        /* \"contracts/3_Ballot.sol\":2630:2972  if (delegate_.voted) {... */\n      iszero\n      tag_72\n      jumpi\n        /* \"contracts/3_Ballot.sol\":2801:2814  sender.weight */\n      dup2\n      sload\n        /* \"contracts/3_Ballot.sol\":2762:2771  proposals */\n      0x02\n        /* \"contracts/3_Ballot.sol\":2772:2786  delegate_.vote */\n      dup3\n      dup2\n      add\n      sload\n        /* \"contracts/3_Ballot.sol\":2762:2787  proposals[delegate_.vote] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_74\n      jumpi\n      tag_74\n      tag_54\n      jump\t// in\n    tag_74:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":2762:2797  proposals[delegate_.vote].voteCount */\n      0x01\n      add\n      0x00\n        /* \"contracts/3_Ballot.sol\":2762:2814  proposals[delegate_.vote].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      tag_76\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_76:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/3_Ballot.sol\":2630:2972  if (delegate_.voted) {... */\n      tag_77\n      swap1\n      pop\n      jump\n    tag_72:\n        /* \"contracts/3_Ballot.sol\":2948:2961  sender.weight */\n      dup2\n      sload\n        /* \"contracts/3_Ballot.sol\":2928:2961  delegate_.weight += sender.weight */\n      dup2\n      sload\n        /* \"contracts/3_Ballot.sol\":2928:2937  delegate_ */\n      dup3\n      swap1\n        /* \"contracts/3_Ballot.sol\":2948:2961  sender.weight */\n      0x00\n      swap1\n        /* \"contracts/3_Ballot.sol\":2928:2961  delegate_.weight += sender.weight */\n      tag_78\n      swap1\n        /* \"contracts/3_Ballot.sol\":2948:2961  sender.weight */\n      dup5\n      swap1\n        /* \"contracts/3_Ballot.sol\":2928:2961  delegate_.weight += sender.weight */\n      tag_57\n      jump\t// in\n    tag_78:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/3_Ballot.sol\":2630:2972  if (delegate_.voted) {... */\n    tag_77:\n        /* \"contracts/3_Ballot.sol\":2108:2978  {... */\n      pop\n      pop\n        /* \"contracts/3_Ballot.sol\":2071:2978  function delegate(address to) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":3810:4175  function winningProposal() public view... */\n    tag_30:\n        /* \"contracts/3_Ballot.sol\":3870:3891  uint winningProposal_ */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/3_Ballot.sol\":3942:4169  for (uint p = 0; p < proposals.length; p++) {... */\n    tag_80:\n        /* \"contracts/3_Ballot.sol\":3963:3972  proposals */\n      0x02\n        /* \"contracts/3_Ballot.sol\":3963:3979  proposals.length */\n      sload\n        /* \"contracts/3_Ballot.sol\":3959:3979  p < proposals.length */\n      dup2\n      lt\n        /* \"contracts/3_Ballot.sol\":3942:4169  for (uint p = 0; p < proposals.length; p++) {... */\n      iszero\n      tag_81\n      jumpi\n        /* \"contracts/3_Ballot.sol\":4029:4045  winningVoteCount */\n      dup2\n        /* \"contracts/3_Ballot.sol\":4004:4013  proposals */\n      0x02\n        /* \"contracts/3_Ballot.sol\":4014:4015  p */\n      dup3\n        /* \"contracts/3_Ballot.sol\":4004:4016  proposals[p] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_84\n      jumpi\n      tag_84\n      tag_54\n      jump\t// in\n    tag_84:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":4004:4026  proposals[p].voteCount */\n      0x01\n      add\n      sload\n        /* \"contracts/3_Ballot.sol\":4004:4045  proposals[p].voteCount > winningVoteCount */\n      gt\n        /* \"contracts/3_Ballot.sol\":4000:4159  if (proposals[p].voteCount > winningVoteCount) {... */\n      iszero\n      tag_86\n      jumpi\n        /* \"contracts/3_Ballot.sol\":4084:4093  proposals */\n      0x02\n        /* \"contracts/3_Ballot.sol\":4094:4095  p */\n      dup2\n        /* \"contracts/3_Ballot.sol\":4084:4096  proposals[p] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_88\n      jumpi\n      tag_88\n      tag_54\n      jump\t// in\n    tag_88:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":4084:4106  proposals[p].voteCount */\n      0x01\n      add\n      sload\n        /* \"contracts/3_Ballot.sol\":4065:4106  winningVoteCount = proposals[p].voteCount */\n      swap2\n      pop\n        /* \"contracts/3_Ballot.sol\":4143:4144  p */\n      dup1\n        /* \"contracts/3_Ballot.sol\":4124:4144  winningProposal_ = p */\n      swap3\n      pop\n        /* \"contracts/3_Ballot.sol\":4000:4159  if (proposals[p].voteCount > winningVoteCount) {... */\n    tag_86:\n        /* \"contracts/3_Ballot.sol\":3981:3984  p++ */\n      dup1\n      tag_90\n      dup2\n      tag_91\n      jump\t// in\n    tag_90:\n      swap2\n      pop\n      pop\n        /* \"contracts/3_Ballot.sol\":3942:4169  for (uint p = 0; p < proposals.length; p++) {... */\n      jump(tag_80)\n    tag_81:\n      pop\n        /* \"contracts/3_Ballot.sol\":3897:4175  {... */\n      pop\n        /* \"contracts/3_Ballot.sol\":3810:4175  function winningProposal() public view... */\n      swap1\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":1592:1947  function giveRightToVote(address voter) public {... */\n    tag_35:\n        /* \"contracts/3_Ballot.sol\":1684:1695  chairperson */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/3_Ballot.sol\":1670:1680  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":1670:1695  msg.sender == chairperson */\n      eq\n        /* \"contracts/3_Ballot.sol\":1649:1761  require(... */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4235:4237   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":1649:1761  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4217:4238   */\n      mstore\n        /* \"#utility.yul\":4274:4276   */\n      0x28\n        /* \"#utility.yul\":4254:4272   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4247:4277   */\n      mstore\n        /* \"#utility.yul\":4313:4347   */\n      0x4f6e6c79206368616972706572736f6e2063616e206769766520726967687420\n        /* \"#utility.yul\":4293:4311   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4286:4348   */\n      mstore\n      shl(0xc1, 0x3a37903b37ba3297)\n        /* \"#utility.yul\":4364:4382   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4357:4395   */\n      mstore\n        /* \"#utility.yul\":4412:4431   */\n      0x84\n      add\n        /* \"contracts/3_Ballot.sol\":1649:1761  require(... */\n      tag_47\n        /* \"#utility.yul\":4033:4437   */\n      jump\n        /* \"contracts/3_Ballot.sol\":1649:1761  require(... */\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/3_Ballot.sol\":1793:1806  voters[voter] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/3_Ballot.sol\":1793:1799  voters */\n      0x01\n        /* \"contracts/3_Ballot.sol\":1793:1806  voters[voter] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/3_Ballot.sol\":1793:1812  voters[voter].voted */\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/3_Ballot.sol\":1792:1812  !voters[voter].voted */\n      iszero\n        /* \"contracts/3_Ballot.sol\":1771:1862  require(... */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4644:4646   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":1771:1862  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4626:4647   */\n      mstore\n        /* \"#utility.yul\":4683:4685   */\n      0x18\n        /* \"#utility.yul\":4663:4681   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4656:4686   */\n      mstore\n        /* \"#utility.yul\":4722:4748   */\n      0x54686520766f74657220616c726561647920766f7465642e0000000000000000\n        /* \"#utility.yul\":4702:4720   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4695:4749   */\n      mstore\n        /* \"#utility.yul\":4766:4784   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":1771:1862  require(... */\n      tag_47\n        /* \"#utility.yul\":4442:4790   */\n      jump\n        /* \"contracts/3_Ballot.sol\":1771:1862  require(... */\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/3_Ballot.sol\":1880:1893  voters[voter] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/3_Ballot.sol\":1880:1886  voters */\n      0x01\n        /* \"contracts/3_Ballot.sol\":1880:1893  voters[voter] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/3_Ballot.sol\":1880:1900  voters[voter].weight */\n      sload\n        /* \"contracts/3_Ballot.sol\":1880:1905  voters[voter].weight == 0 */\n      iszero\n        /* \"contracts/3_Ballot.sol\":1872:1906  require(voters[voter].weight == 0) */\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/3_Ballot.sol\":1916:1929  voters[voter] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/3_Ballot.sol\":1939:1940  1 */\n      0x01\n        /* \"contracts/3_Ballot.sol\":1916:1929  voters[voter] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/3_Ballot.sol\":1916:1940  voters[voter].weight = 1 */\n      sstore\n        /* \"contracts/3_Ballot.sol\":1592:1947  function giveRightToVote(address voter) public {... */\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":4366:4510  function winnerName() public view... */\n    tag_42:\n        /* \"contracts/3_Ballot.sol\":4421:4440  bytes32 winnerName_ */\n      0x00\n        /* \"contracts/3_Ballot.sol\":4470:4479  proposals */\n      0x02\n        /* \"contracts/3_Ballot.sol\":4480:4497  winningProposal() */\n      tag_101\n        /* \"contracts/3_Ballot.sol\":4480:4495  winningProposal */\n      tag_30\n        /* \"contracts/3_Ballot.sol\":4480:4497  winningProposal() */\n      jump\t// in\n    tag_101:\n        /* \"contracts/3_Ballot.sol\":4470:4498  proposals[winningProposal()] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_103\n      jumpi\n      tag_103\n      tag_54\n      jump\t// in\n    tag_103:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":4470:4503  proposals[winningProposal()].name */\n      0x00\n      add\n      sload\n        /* \"contracts/3_Ballot.sol\":4456:4503  winnerName_ = proposals[winningProposal()].name */\n      swap1\n      pop\n        /* \"contracts/3_Ballot.sol\":4366:4510  function winnerName() public view... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_14:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_108:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":660:946   */\n    tag_27:\n        /* \"#utility.yul\":719:725   */\n      0x00\n        /* \"#utility.yul\":772:774   */\n      0x20\n        /* \"#utility.yul\":760:769   */\n      dup3\n        /* \"#utility.yul\":751:758   */\n      dup5\n        /* \"#utility.yul\":747:770   */\n      sub\n        /* \"#utility.yul\":743:775   */\n      slt\n        /* \"#utility.yul\":740:792   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":788:789   */\n      0x00\n        /* \"#utility.yul\":785:786   */\n      dup1\n        /* \"#utility.yul\":778:790   */\n      revert\n        /* \"#utility.yul\":740:792   */\n    tag_112:\n        /* \"#utility.yul\":814:837   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":866:897   */\n      dup2\n      and\n        /* \"#utility.yul\":856:898   */\n      dup2\n      eq\n        /* \"#utility.yul\":846:916   */\n      tag_113\n      jumpi\n        /* \"#utility.yul\":912:913   */\n      0x00\n        /* \"#utility.yul\":909:910   */\n      dup1\n        /* \"#utility.yul\":902:914   */\n      revert\n        /* \"#utility.yul\":846:916   */\n    tag_113:\n        /* \"#utility.yul\":935:940   */\n      swap4\n        /* \"#utility.yul\":660:946   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2439:2566   */\n    tag_54:\n        /* \"#utility.yul\":2500:2510   */\n      0x4e487b71\n        /* \"#utility.yul\":2495:2498   */\n      0xe0\n        /* \"#utility.yul\":2491:2511   */\n      shl\n        /* \"#utility.yul\":2488:2489   */\n      0x00\n        /* \"#utility.yul\":2481:2512   */\n      mstore\n        /* \"#utility.yul\":2531:2535   */\n      0x32\n        /* \"#utility.yul\":2528:2529   */\n      0x04\n        /* \"#utility.yul\":2521:2536   */\n      mstore\n        /* \"#utility.yul\":2555:2559   */\n      0x24\n        /* \"#utility.yul\":2552:2553   */\n      0x00\n        /* \"#utility.yul\":2545:2560   */\n      revert\n        /* \"#utility.yul\":2571:2698   */\n    tag_105:\n        /* \"#utility.yul\":2632:2642   */\n      0x4e487b71\n        /* \"#utility.yul\":2627:2630   */\n      0xe0\n        /* \"#utility.yul\":2623:2643   */\n      shl\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2613:2644   */\n      mstore\n        /* \"#utility.yul\":2663:2667   */\n      0x11\n        /* \"#utility.yul\":2660:2661   */\n      0x04\n        /* \"#utility.yul\":2653:2668   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x24\n        /* \"#utility.yul\":2684:2685   */\n      0x00\n        /* \"#utility.yul\":2677:2692   */\n      revert\n        /* \"#utility.yul\":2703:2828   */\n    tag_57:\n        /* \"#utility.yul\":2768:2777   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2789:2799   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2786:2822   */\n      iszero\n      tag_123\n      jumpi\n        /* \"#utility.yul\":2802:2820   */\n      tag_123\n      tag_105\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2703:2828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3893:4028   */\n    tag_91:\n        /* \"#utility.yul\":3932:3935   */\n      0x00\n        /* \"#utility.yul\":3953:3970   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":3950:3993   */\n      tag_129\n      jumpi\n        /* \"#utility.yul\":3973:3991   */\n      tag_129\n      tag_105\n      jump\t// in\n    tag_129:\n      pop\n        /* \"#utility.yul\":4020:4021   */\n      0x01\n        /* \"#utility.yul\":4009:4022   */\n      add\n      swap1\n        /* \"#utility.yul\":3893:4028   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122052d327cf7b1d461192100d100bab4abbc16f842bf55e483304665b7296a5264e64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_71": {
									"entryPoint": null,
									"id": 71,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 204,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1622:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "252:999:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "262:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "272:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "266:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "328:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "331:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "321:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "321:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "294:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "303:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "290:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "290:23:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "315:2:1"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "286:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "286:32:1"
															},
															"nodeType": "YulIf",
															"src": "283:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "344:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "364:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "358:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "348:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "383:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "401:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "405:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "397:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "397:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "409:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "393:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "393:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "387:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "438:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "447:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "450:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "440:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "440:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "440:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "426:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "434:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "423:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "423:14:1"
															},
															"nodeType": "YulIf",
															"src": "420:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "463:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "477:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "488:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "473:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "467:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "543:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "552:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "555:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "545:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "545:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "545:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "522:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "526:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "518:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "518:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "533:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "514:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "514:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "507:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "507:35:1"
															},
															"nodeType": "YulIf",
															"src": "504:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "568:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "584:2:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "578:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "578:9:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "572:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "610:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "612:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "602:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "606:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "599:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:10:1"
															},
															"nodeType": "YulIf",
															"src": "596:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "641:20:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "655:1:1",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "658:2:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "651:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "651:10:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "645:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "670:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "690:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "684:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "674:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "702:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "724:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "740:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "744:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "736:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "736:11:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "753:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "749:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "749:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:25:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "720:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "720:38:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "706:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "817:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "819:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "819:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "819:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "776:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "788:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "773:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "796:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "808:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "793:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "793:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "770:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "770:46:1"
															},
															"nodeType": "YulIf",
															"src": "767:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "855:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "859:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "848:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "848:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "848:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "879:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "890:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "883:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "912:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "920:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "905:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "905:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "905:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "932:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "943:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "951:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "939:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "939:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "932:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "963:34:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "985:2:1"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "989:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:11:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "994:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "977:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "977:20:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "967:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1029:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1038:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1041:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1031:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1031:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1031:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1012:6:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1020:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1009:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1009:19:1"
															},
															"nodeType": "YulIf",
															"src": "1006:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1054:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1069:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1073:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1065:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1065:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1058:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1141:79:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1162:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1173:3:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1167:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1167:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1155:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1155:23:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1155:23:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1191:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1202:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1207:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1198:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1198:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1191:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1096:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1101:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1093:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1093:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1109:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1111:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1122:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1127:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1118:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1118:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1111:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1089:3:1",
																"statements": []
															},
															"src": "1085:135:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1229:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1239:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1229:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "218:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "229:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "241:6:1",
														"type": ""
													}
												],
												"src": "146:1105:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1288:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1305:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1312:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1317:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1308:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1308:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1298:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1298:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1298:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1345:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1348:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1338:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1338:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1338:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1369:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1372:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1362:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1362:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "1256:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1435:185:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1474:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1495:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1502:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1507:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1498:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1498:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1488:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1488:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1488:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1539:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1542:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1532:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1532:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1532:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1567:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1570:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1560:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1560:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1560:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1451:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1462:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1458:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1458:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1448:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1448:17:1"
															},
															"nodeType": "YulIf",
															"src": "1445:140:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1594:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1605:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1612:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1601:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1601:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1594:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1417:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1427:3:1",
														"type": ""
													}
												],
												"src": "1388:232:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n        }\n        value0 := memPtr\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161096438038061096483398101604081905261002f916100e2565b600080546001600160a01b03191633908117825581526001602081905260408220555b81518110156100c5576002604051806040016040528084848151811061007a5761007a61019f565b602090810291909101810151825260009181018290528354600181810186559483529181902083516002909302019182559190910151910155806100bd816101b5565b915050610052565b50506101dc565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156100f557600080fd5b82516001600160401b038082111561010c57600080fd5b818501915085601f83011261012057600080fd5b815181811115610132576101326100cc565b8060051b604051601f19603f83011681018181108582111715610157576101576100cc565b60405291825284820192508381018501918883111561017557600080fd5b938501935b828510156101935784518452938501939285019261017a565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016101d557634e487b7160e01b600052601160045260246000fd5b5060010190565b610779806101eb6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063609ff1bd1161005b578063609ff1bd1461010d5780639e7b8d6114610123578063a3ec138d14610136578063e2ba53f0146101a757600080fd5b80630121b93f1461008d578063013cf08b146100a25780632e4176cf146100cf5780635c19a95c146100fa575b600080fd5b6100a061009b36600461069c565b6101af565b005b6100b56100b036600461069c565b6102a9565b604080519283526020830191909152015b60405180910390f35b6000546100e2906001600160a01b031681565b6040516001600160a01b0390911681526020016100c6565b6100a06101083660046106b5565b6102d7565b6101156104d4565b6040519081526020016100c6565b6100a06101313660046106b5565b610551565b6101786101443660046106b5565b600160208190526000918252604090912080549181015460029091015460ff82169161010090046001600160a01b03169084565b6040516100c6949392919093845291151560208401526001600160a01b03166040830152606082015260800190565b610115610669565b336000908152600160205260408120805490910361020b5760405162461bcd60e51b8152602060048201526014602482015273486173206e6f20726967687420746f20766f746560601b60448201526064015b60405180910390fd5b600181015460ff16156102515760405162461bcd60e51b815260206004820152600e60248201526d20b63932b0b23c903b37ba32b21760911b6044820152606401610202565b6001818101805460ff1916909117905560028082018390558154815490919084908110610280576102806106e5565b906000526020600020906002020160010160008282546102a09190610711565b90915550505050565b600281815481106102b957600080fd5b60009182526020909120600290910201805460019091015490915082565b3360009081526001602081905260409091209081015460ff16156103325760405162461bcd60e51b81526020600482015260126024820152712cb7ba9030b63932b0b23c903b37ba32b21760711b6044820152606401610202565b336001600160a01b0383160361038a5760405162461bcd60e51b815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e00006044820152606401610202565b6001600160a01b03828116600090815260016020819052604090912001546101009004161561042e576001600160a01b03918216600090815260016020819052604090912001546101009004909116903382036104295760405162461bcd60e51b815260206004820152601960248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e2e000000000000006044820152606401610202565b61038a565b600181810180546001600160a81b0319166101006001600160a01b03861690810291909117831790915560009081526020829052604090209081015460ff16156104b55781546002828101548154811061048a5761048a6106e5565b906000526020600020906002020160010160008282546104aa9190610711565b909155506104cf9050565b8154815482906000906104c9908490610711565b90915550505b505050565b600080805b60025481101561054c5781600282815481106104f7576104f76106e5565b906000526020600020906002020160010154111561053a5760028181548110610522576105226106e5565b90600052602060002090600202016001015491508092505b806105448161072a565b9150506104d9565b505090565b6000546001600160a01b031633146105bc5760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e2067697665207269676874206044820152673a37903b37ba329760c11b6064820152608401610202565b6001600160a01b0381166000908152600160208190526040909120015460ff16156106295760405162461bcd60e51b815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e00000000000000006044820152606401610202565b6001600160a01b0381166000908152600160205260409020541561064c57600080fd5b6001600160a01b0316600090815260016020819052604090912055565b600060026106756104d4565b81548110610685576106856106e5565b906000526020600020906002020160000154905090565b6000602082840312156106ae57600080fd5b5035919050565b6000602082840312156106c757600080fd5b81356001600160a01b03811681146106de57600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610724576107246106fb565b92915050565b60006001820161073c5761073c6106fb565b506001019056fea264697066735822122052d327cf7b1d461192100d100bab4abbc16f842bf55e483304665b7296a5264e64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x964 CODESIZE SUB DUP1 PUSH2 0x964 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SSTORE JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xC5 JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7A JUMPI PUSH2 0x7A PUSH2 0x19F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE SWAP5 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP2 SWAP1 SWAP2 ADD MLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0xBD DUP2 PUSH2 0x1B5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x52 JUMP JUMPDEST POP POP PUSH2 0x1DC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x132 JUMPI PUSH2 0x132 PUSH2 0xCC JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x157 JUMPI PUSH2 0x157 PUSH2 0xCC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x193 JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x17A JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x779 DUP1 PUSH2 0x1EB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x609FF1BD GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xE2BA53F0 EQ PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x13CF08B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0xFA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB5 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xE2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x551 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x669 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SUB PUSH2 0x20B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x486173206E6F20726967687420746F20766F7465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x251 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x20B63932B0B23C903B37BA32B217 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP3 ADD DUP4 SWAP1 SSTORE DUP2 SLOAD DUP2 SLOAD SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x280 JUMPI PUSH2 0x280 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x711 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x332 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2CB7BA9030B63932B0B23C903B37BA32B217 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV AND ISZERO PUSH2 0x42E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 CALLER DUP3 SUB PUSH2 0x429 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4B5 JUMPI DUP2 SLOAD PUSH1 0x2 DUP3 DUP2 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x48A JUMPI PUSH2 0x48A PUSH2 0x6E5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x711 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4CF SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x4C9 SWAP1 DUP5 SWAP1 PUSH2 0x711 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x54C JUMPI DUP2 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4F7 JUMPI PUSH2 0x4F7 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x53A JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x522 JUMPI PUSH2 0x522 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 PUSH2 0x544 DUP2 PUSH2 0x72A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4D9 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3A37903B37BA3297 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x629 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x64C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x675 PUSH2 0x4D4 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x685 JUMPI PUSH2 0x685 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x724 JUMPI PUSH2 0x724 PUSH2 0x6FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x73C JUMPI PUSH2 0x73C PUSH2 0x6FB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xD3 0x27 0xCF PUSH28 0x1D461192100D100BAB4ABBC16F842BF55E483304665B7296A5264E64 PUSH20 0x6F6C634300081200330000000000000000000000 ",
							"sourceMap": "157:4355:0:-:0;;;955:481;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1009:11;:24;;-1:-1:-1;;;;;;1009:24:0;1023:10;1009:24;;;;;1043:19;;1009:24;1043:19;;;;;;;:30;1084:346;1105:13;:20;1101:1;:24;1084:346;;;1309:9;1324:94;;;;;;;;1357:13;1371:1;1357:16;;;;;;;;:::i;:::-;;;;;;;;;;;;1324:94;;1402:1;1324:94;;;;;;1309:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1127:3;;;;:::i;:::-;;;;1084:346;;;;955:481;157:4355;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1105;241:6;272:2;315;303:9;294:7;290:23;286:32;283:52;;;331:1;328;321:12;283:52;358:16;;-1:-1:-1;;;;;423:14:1;;;420:34;;;450:1;447;440:12;420:34;488:6;477:9;473:22;463:32;;533:7;526:4;522:2;518:13;514:27;504:55;;555:1;552;545:12;504:55;584:2;578:9;606:2;602;599:10;596:36;;;612:18;;:::i;:::-;658:2;655:1;651:10;690:2;684:9;753:2;749:7;744:2;740;736:11;732:25;724:6;720:38;808:6;796:10;793:22;788:2;776:10;773:18;770:46;767:72;;;819:18;;:::i;:::-;855:2;848:22;905:18;;;939:15;;;;-1:-1:-1;981:11:1;;;977:20;;;1009:19;;;1006:39;;;1041:1;1038;1031:12;1006:39;1065:11;;;;1085:135;1101:6;1096:3;1093:15;1085:135;;;1167:10;;1155:23;;1118:12;;;;1198;;;;1085:135;;;1239:6;146:1105;-1:-1:-1;;;;;;;;146:1105:1:o;1256:127::-;1317:10;1312:3;1308:20;1305:1;1298:31;1348:4;1345:1;1338:15;1372:4;1369:1;1362:15;1388:232;1427:3;1448:17;;;1445:140;;1507:10;1502:3;1498:20;1495:1;1488:31;1542:4;1539:1;1532:15;1570:4;1567:1;1560:15;1445:140;-1:-1:-1;1612:1:1;1601:13;;1388:232::o;:::-;157:4355:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@chairperson_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@delegate_207": {
									"entryPoint": 727,
									"id": 207,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@giveRightToVote_111": {
									"entryPoint": 1361,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@proposals_27": {
									"entryPoint": 681,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vote_257": {
									"entryPoint": 431,
									"id": 257,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@voters_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@winnerName_315": {
									"entryPoint": 1641,
									"id": 315,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@winningProposal_300": {
									"entryPoint": 1236,
									"id": 300,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool_t_address_t_uint256__to_t_uint256_t_bool_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1787,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1765,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4792:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "328:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "338:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "350:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "361:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "346:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "346:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "338:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "380:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "391:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "373:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "373:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "373:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "418:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "429:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "414:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "414:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "434:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "407:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "407:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "289:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "300:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "308:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "319:4:1",
														"type": ""
													}
												],
												"src": "199:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "575:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "586:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "571:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "571:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "563:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "605:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "620:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "636:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "641:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "632:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "632:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "645:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "628:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "628:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "616:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "616:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "598:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "598:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "598:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "522:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "533:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "544:4:1",
														"type": ""
													}
												],
												"src": "452:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "730:216:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "776:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "785:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "788:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "778:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "778:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "778:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "751:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "760:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "747:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "747:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "772:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "743:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:32:1"
															},
															"nodeType": "YulIf",
															"src": "740:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "801:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "827:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "814:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "814:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "805:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "900:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "909:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "912:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "902:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "902:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "859:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "870:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "885:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "890:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "881:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "881:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "894:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "877:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "877:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "866:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "866:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "856:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "856:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "849:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "849:50:1"
															},
															"nodeType": "YulIf",
															"src": "846:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "925:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "935:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "925:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "696:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "707:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "719:6:1",
														"type": ""
													}
												],
												"src": "660:286:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1052:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1062:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1074:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1085:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1070:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1070:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1062:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1104:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1115:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1097:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1097:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1097:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1021:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1032:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1043:4:1",
														"type": ""
													}
												],
												"src": "951:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1312:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1322:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1345:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1330:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1365:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1376:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1358:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1403:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1414:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1399:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1399:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "1433:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1426:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1426:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1419:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1419:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1392:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1392:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1392:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1462:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1473:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1458:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1458:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "1482:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1498:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1503:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1494:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1494:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1507:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1490:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1490:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1478:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1478:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1451:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1451:60:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1531:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1542:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1527:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1527:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1547:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1520:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1520:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool_t_address_t_uint256__to_t_uint256_t_bool_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1257:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1268:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1276:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1284:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1292:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1303:4:1",
														"type": ""
													}
												],
												"src": "1133:427:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1666:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1676:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1688:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1699:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1684:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1684:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1676:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1718:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1729:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1711:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1711:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1711:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1635:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1646:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1657:4:1",
														"type": ""
													}
												],
												"src": "1565:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1921:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1938:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1931:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1931:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1931:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1972:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1983:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1968:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1968:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1961:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1961:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1961:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2011:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2022:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2007:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2007:18:1"
																	},
																	{
																		"hexValue": "486173206e6f20726967687420746f20766f7465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2027:22:1",
																		"type": "",
																		"value": "Has no right to vote"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2000:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2000:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2000:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2059:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2071:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2082:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2067:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2067:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2059:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1898:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1912:4:1",
														"type": ""
													}
												],
												"src": "1747:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2287:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2298:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2280:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2280:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2280:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2321:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2332:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2317:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2317:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2337:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2310:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2310:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2360:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2371:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2356:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2356:18:1"
																	},
																	{
																		"hexValue": "416c726561647920766f7465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2376:16:1",
																		"type": "",
																		"value": "Already voted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2349:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2349:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2349:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2402:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2414:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2425:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2410:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2410:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2402:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2247:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2261:4:1",
														"type": ""
													}
												],
												"src": "2096:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2471:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2495:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2500:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2491:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2491:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2481:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2481:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2481:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2528:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2531:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2521:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2521:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2521:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2552:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2555:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2545:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2545:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2545:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "2439:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2603:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2620:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2627:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2632:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2623:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2623:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2613:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2613:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2613:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2660:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2663:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2653:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2653:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2653:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2684:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2687:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2677:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2677:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2571:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2751:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2761:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2772:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2775:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2768:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2768:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2761:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2800:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2802:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2802:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2802:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2792:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2795:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2789:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2789:10:1"
															},
															"nodeType": "YulIf",
															"src": "2786:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2734:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2737:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2743:3:1",
														"type": ""
													}
												],
												"src": "2703:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3007:168:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3024:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3035:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3017:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3017:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3017:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3058:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3069:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3054:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3074:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3047:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3097:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3108:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3093:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3093:18:1"
																	},
																	{
																		"hexValue": "596f7520616c726561647920766f7465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3113:20:1",
																		"type": "",
																		"value": "You already voted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3086:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3086:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3086:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3143:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3155:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3166:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3151:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3151:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3143:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2984:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2998:4:1",
														"type": ""
													}
												],
												"src": "2833:342:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3354:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3371:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3382:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3364:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3364:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3364:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3405:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3416:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3401:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3401:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3421:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3394:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3394:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3394:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3444:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3455:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3440:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3440:18:1"
																	},
																	{
																		"hexValue": "53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3460:32:1",
																		"type": "",
																		"value": "Self-delegation is disallowed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3433:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3433:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3502:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3514:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3525:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3510:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3502:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3331:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3345:4:1",
														"type": ""
													}
												],
												"src": "3180:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3713:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3730:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3723:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3723:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3723:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3764:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3775:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3760:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3760:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3780:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3753:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3753:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3803:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3799:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3799:18:1"
																	},
																	{
																		"hexValue": "466f756e64206c6f6f7020696e2064656c65676174696f6e2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3819:27:1",
																		"type": "",
																		"value": "Found loop in delegation."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3792:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3792:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3792:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3856:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3868:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3879:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3864:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3864:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3856:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3690:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3704:4:1",
														"type": ""
													}
												],
												"src": "3539:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3940:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3971:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3973:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3973:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3973:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3956:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3967:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3963:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3963:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3953:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3953:17:1"
															},
															"nodeType": "YulIf",
															"src": "3950:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4002:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4013:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4020:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4009:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4009:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4002:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3922:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3932:3:1",
														"type": ""
													}
												],
												"src": "3893:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4224:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4235:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4217:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4217:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4217:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4258:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4269:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4254:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4254:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4274:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4247:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4247:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4297:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4308:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4293:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4293:18:1"
																	},
																	{
																		"hexValue": "4f6e6c79206368616972706572736f6e2063616e206769766520726967687420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4313:34:1",
																		"type": "",
																		"value": "Only chairperson can give right "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4286:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4286:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4286:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4368:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4364:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4364:18:1"
																	},
																	{
																		"hexValue": "746f20766f74652e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4384:10:1",
																		"type": "",
																		"value": "to vote."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4357:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4357:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4357:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4404:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4416:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4427:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4412:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4412:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4404:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4184:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4198:4:1",
														"type": ""
													}
												],
												"src": "4033:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4616:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4633:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4644:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4626:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4626:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4626:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4667:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4678:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4663:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4663:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4683:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4656:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4656:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4656:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4706:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4717:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4702:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4702:18:1"
																	},
																	{
																		"hexValue": "54686520766f74657220616c726561647920766f7465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4722:26:1",
																		"type": "",
																		"value": "The voter already voted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4695:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4695:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4695:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4758:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4770:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4766:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4766:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4758:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4593:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4607:4:1",
														"type": ""
													}
												],
												"src": "4442:348:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_bool_t_address_t_uint256__to_t_uint256_t_bool_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Has no right to vote\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Already voted.\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"You already voted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Self-delegation is disallowed.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Found loop in delegation.\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Only chairperson can give right \")\n        mstore(add(headStart, 96), \"to vote.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"The voter already voted.\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c8063609ff1bd1161005b578063609ff1bd1461010d5780639e7b8d6114610123578063a3ec138d14610136578063e2ba53f0146101a757600080fd5b80630121b93f1461008d578063013cf08b146100a25780632e4176cf146100cf5780635c19a95c146100fa575b600080fd5b6100a061009b36600461069c565b6101af565b005b6100b56100b036600461069c565b6102a9565b604080519283526020830191909152015b60405180910390f35b6000546100e2906001600160a01b031681565b6040516001600160a01b0390911681526020016100c6565b6100a06101083660046106b5565b6102d7565b6101156104d4565b6040519081526020016100c6565b6100a06101313660046106b5565b610551565b6101786101443660046106b5565b600160208190526000918252604090912080549181015460029091015460ff82169161010090046001600160a01b03169084565b6040516100c6949392919093845291151560208401526001600160a01b03166040830152606082015260800190565b610115610669565b336000908152600160205260408120805490910361020b5760405162461bcd60e51b8152602060048201526014602482015273486173206e6f20726967687420746f20766f746560601b60448201526064015b60405180910390fd5b600181015460ff16156102515760405162461bcd60e51b815260206004820152600e60248201526d20b63932b0b23c903b37ba32b21760911b6044820152606401610202565b6001818101805460ff1916909117905560028082018390558154815490919084908110610280576102806106e5565b906000526020600020906002020160010160008282546102a09190610711565b90915550505050565b600281815481106102b957600080fd5b60009182526020909120600290910201805460019091015490915082565b3360009081526001602081905260409091209081015460ff16156103325760405162461bcd60e51b81526020600482015260126024820152712cb7ba9030b63932b0b23c903b37ba32b21760711b6044820152606401610202565b336001600160a01b0383160361038a5760405162461bcd60e51b815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e00006044820152606401610202565b6001600160a01b03828116600090815260016020819052604090912001546101009004161561042e576001600160a01b03918216600090815260016020819052604090912001546101009004909116903382036104295760405162461bcd60e51b815260206004820152601960248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e2e000000000000006044820152606401610202565b61038a565b600181810180546001600160a81b0319166101006001600160a01b03861690810291909117831790915560009081526020829052604090209081015460ff16156104b55781546002828101548154811061048a5761048a6106e5565b906000526020600020906002020160010160008282546104aa9190610711565b909155506104cf9050565b8154815482906000906104c9908490610711565b90915550505b505050565b600080805b60025481101561054c5781600282815481106104f7576104f76106e5565b906000526020600020906002020160010154111561053a5760028181548110610522576105226106e5565b90600052602060002090600202016001015491508092505b806105448161072a565b9150506104d9565b505090565b6000546001600160a01b031633146105bc5760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e2067697665207269676874206044820152673a37903b37ba329760c11b6064820152608401610202565b6001600160a01b0381166000908152600160208190526040909120015460ff16156106295760405162461bcd60e51b815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e00000000000000006044820152606401610202565b6001600160a01b0381166000908152600160205260409020541561064c57600080fd5b6001600160a01b0316600090815260016020819052604090912055565b600060026106756104d4565b81548110610685576106856106e5565b906000526020600020906002020160000154905090565b6000602082840312156106ae57600080fd5b5035919050565b6000602082840312156106c757600080fd5b81356001600160a01b03811681146106de57600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610724576107246106fb565b92915050565b60006001820161073c5761073c6106fb565b506001019056fea264697066735822122052d327cf7b1d461192100d100bab4abbc16f842bf55e483304665b7296a5264e64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x609FF1BD GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xE2BA53F0 EQ PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x13CF08B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0xFA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB5 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x69C JUMP JUMPDEST PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xE2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x551 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x669 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SUB PUSH2 0x20B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x486173206E6F20726967687420746F20766F7465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x251 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x20B63932B0B23C903B37BA32B217 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP3 ADD DUP4 SWAP1 SSTORE DUP2 SLOAD DUP2 SLOAD SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x280 JUMPI PUSH2 0x280 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x711 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x332 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2CB7BA9030B63932B0B23C903B37BA32B217 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV AND ISZERO PUSH2 0x42E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 CALLER DUP3 SUB PUSH2 0x429 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4B5 JUMPI DUP2 SLOAD PUSH1 0x2 DUP3 DUP2 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x48A JUMPI PUSH2 0x48A PUSH2 0x6E5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x711 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4CF SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x4C9 SWAP1 DUP5 SWAP1 PUSH2 0x711 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x54C JUMPI DUP2 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4F7 JUMPI PUSH2 0x4F7 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x53A JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x522 JUMPI PUSH2 0x522 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 PUSH2 0x544 DUP2 PUSH2 0x72A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4D9 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3A37903B37BA3297 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x629 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x64C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x675 PUSH2 0x4D4 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x685 JUMPI PUSH2 0x685 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x724 JUMPI PUSH2 0x724 PUSH2 0x6FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x73C JUMPI PUSH2 0x73C PUSH2 0x6FB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xD3 0x27 0xCF PUSH28 0x1D461192100D100BAB4ABBC16F842BF55E483304665B7296A5264E64 PUSH20 0x6F6C634300081200330000000000000000000000 ",
							"sourceMap": "157:4355:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3166:458;;;;;;:::i;:::-;;:::i;:::-;;791:27;;;;;;:::i;:::-;;:::i;:::-;;;;373:25:1;;;429:2;414:18;;407:34;;;;346:18;791:27:0;;;;;;;;712:26;;;;;-1:-1:-1;;;;;712:26:0;;;;;;-1:-1:-1;;;;;616:32:1;;;598:51;;586:2;571:18;712:26:0;452:203:1;2071:907:0;;;;;;:::i;:::-;;:::i;3810:365::-;;;:::i;:::-;;;1097:25:1;;;1085:2;1070:18;3810:365:0;951:177:1;1592:355:0;;;;;;:::i;:::-;;:::i;745:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;745:39:0;;;;;;;;;;;;;1358:25:1;;;1426:14;;1419:22;1414:2;1399:18;;1392:50;-1:-1:-1;;;;;1478:32:1;1473:2;1458:18;;1451:60;1542:2;1527:18;;1520:34;1345:3;1330:19;;1133:427;4366:144:0;;;:::i;3166:458::-;3242:10;3212:20;3235:18;;;:6;:18;;;;;3271:13;;3235:18;;3271;3263:51;;;;-1:-1:-1;;;3263:51:0;;1949:2:1;3263:51:0;;;1931:21:1;1988:2;1968:18;;;1961:30;-1:-1:-1;;;2007:18:1;;;2000:50;2067:18;;3263:51:0;;;;;;;;;3333:12;;;;;;3332:13;3324:40;;;;-1:-1:-1;;;3324:40:0;;2298:2:1;3324:40:0;;;2280:21:1;2337:2;2317:18;;;2310:30;-1:-1:-1;;;2356:18:1;;;2349:44;2410:18;;3324:40:0;2096:338:1;3324:40:0;3389:4;3374:12;;;:19;;-1:-1:-1;;3374:19:0;;;;;;3403:11;;;;:22;;;3604:13;;3571:19;;3604:13;;3403:11;3417:8;;3571:19;;;;;;:::i;:::-;;;;;;;;;;;:29;;;:46;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;3166:458:0:o;791:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;791:27:0;:::o;2071:907::-;2148:10;2118:20;2141:18;;;:6;:18;;;;;;;;2178:12;;;;;;2177:13;2169:44;;;;-1:-1:-1;;;2169:44:0;;3035:2:1;2169:44:0;;;3017:21:1;3074:2;3054:18;;;3047:30;-1:-1:-1;;;3093:18:1;;;3086:48;3151:18;;2169:44:0;2833:342:1;2169:44:0;2237:10;-1:-1:-1;;;;;2231:16:0;;;2223:59;;;;-1:-1:-1;;;2223:59:0;;3382:2:1;2223:59:0;;;3364:21:1;3421:2;3401:18;;;3394:30;3460:32;3440:18;;;3433:60;3510:18;;2223:59:0;3180:354:1;2223:59:0;-1:-1:-1;;;;;2300:10:0;;;2331:1;2300:10;;;:6;:10;;;;;;;;:19;;;;;;:33;2293:223;;-1:-1:-1;;;;;2354:10:0;;;;;;;:6;:10;;;;;;;;:19;;;;;;;;;2465:10;2459:16;;2451:54;;;;-1:-1:-1;;;2451:54:0;;3741:2:1;2451:54:0;;;3723:21:1;3780:2;3760:18;;;3753:30;3819:27;3799:18;;;3792:55;3864:18;;2451:54:0;3539:349:1;2451:54:0;2293:223;;;2540:4;2525:12;;;:19;;-1:-1:-1;;;;;;2554:20:0;2525:19;-1:-1:-1;;;;;2554:20:0;;;;;;;;;;;;;;-1:-1:-1;2610:10:0;;;;;;;;;;2634:15;;;;2525:19;2634:15;2630:342;;;2801:13;;2762:9;2772:14;;;;2762:25;;;;;;;;:::i;:::-;;;;;;;;;;;:35;;;:52;;;;;;;:::i;:::-;;;;-1:-1:-1;2630:342:0;;-1:-1:-1;2630:342:0;;2948:13;;2928:33;;:9;;2948:13;;2928:33;;2948:13;;2928:33;:::i;:::-;;;;-1:-1:-1;;2630:342:0;2108:870;;2071:907;:::o;3810:365::-;3870:21;;;3942:227;3963:9;:16;3959:20;;3942:227;;;4029:16;4004:9;4014:1;4004:12;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:41;4000:159;;;4084:9;4094:1;4084:12;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;4065:41;;4143:1;4124:20;;4000:159;3981:3;;;;:::i;:::-;;;;3942:227;;;;3897:278;3810:365;:::o;1592:355::-;1684:11;;-1:-1:-1;;;;;1684:11:0;1670:10;:25;1649:112;;;;-1:-1:-1;;;1649:112:0;;4235:2:1;1649:112:0;;;4217:21:1;4274:2;4254:18;;;4247:30;4313:34;4293:18;;;4286:62;-1:-1:-1;;;4364:18:1;;;4357:38;4412:19;;1649:112:0;4033:404:1;1649:112:0;-1:-1:-1;;;;;1793:13:0;;;;;;:6;:13;;;;;;;;:19;;;;1792:20;1771:91;;;;-1:-1:-1;;;1771:91:0;;4644:2:1;1771:91:0;;;4626:21:1;4683:2;4663:18;;;4656:30;4722:26;4702:18;;;4695:54;4766:18;;1771:91:0;4442:348:1;1771:91:0;-1:-1:-1;;;;;1880:13:0;;;;;;:6;:13;;;;;:20;:25;1872:34;;;;;;-1:-1:-1;;;;;1916:13:0;;;;;1939:1;1916:13;;;;;;;;:24;1592:355::o;4366:144::-;4421:19;4470:9;4480:17;:15;:17::i;:::-;4470:28;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;;4456:47;;4366:144;:::o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;660:286::-;719:6;772:2;760:9;751:7;747:23;743:32;740:52;;;788:1;785;778:12;740:52;814:23;;-1:-1:-1;;;;;866:31:1;;856:42;;846:70;;912:1;909;902:12;846:70;935:5;660:286;-1:-1:-1;;;660:286:1:o;2439:127::-;2500:10;2495:3;2491:20;2488:1;2481:31;2531:4;2528:1;2521:15;2555:4;2552:1;2545:15;2571:127;2632:10;2627:3;2623:20;2620:1;2613:31;2663:4;2660:1;2653:15;2687:4;2684:1;2677:15;2703:125;2768:9;;;2789:10;;;2786:36;;;2802:18;;:::i;:::-;2703:125;;;;:::o;3893:135::-;3932:3;3953:17;;;3950:43;;3973:18;;:::i;:::-;-1:-1:-1;4020:1:1;4009:13;;3893:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "382600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"chairperson()": "2382",
								"delegate(address)": "infinite",
								"giveRightToVote(address)": "29057",
								"proposals(uint256)": "6743",
								"vote(uint256)": "79515",
								"voters(address)": "6895",
								"winnerName()": "infinite",
								"winningProposal()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 157,
									"end": 4512,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 955,
									"end": 1436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1009,
									"end": 1033,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1033,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1009,
									"end": 1033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1033,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1033,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1033,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1033,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1043,
									"end": 1062,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1043,
									"end": 1062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1033,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1043,
									"end": 1062,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1043,
									"end": 1062,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1043,
									"end": 1062,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1043,
									"end": 1062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1043,
									"end": 1062,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1043,
									"end": 1062,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1043,
									"end": 1062,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1043,
									"end": 1073,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1084,
									"end": 1430,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1084,
									"end": 1430,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1105,
									"end": 1118,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1105,
									"end": 1125,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1101,
									"end": 1102,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1101,
									"end": 1125,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1084,
									"end": 1430,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1084,
									"end": 1430,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1084,
									"end": 1430,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1318,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1370,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1357,
									"end": 1373,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1402,
									"end": 1403,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1127,
									"end": 1130,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1127,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1127,
									"end": 1130,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1127,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1127,
									"end": 1130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1127,
									"end": 1130,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1127,
									"end": 1130,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1127,
									"end": 1130,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1127,
									"end": 1130,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1127,
									"end": 1130,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1084,
									"end": 1430,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1084,
									"end": 1430,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1084,
									"end": 1430,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1084,
									"end": 1430,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1084,
									"end": 1430,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1251,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 146,
									"end": 1251,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 241,
									"end": 247,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 274,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 315,
									"end": 317,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 303,
									"end": 312,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 294,
									"end": 301,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 290,
									"end": 313,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 286,
									"end": 318,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 283,
									"end": 335,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 283,
									"end": 335,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 283,
									"end": 335,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 331,
									"end": 332,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 328,
									"end": 329,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 321,
									"end": 333,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 283,
									"end": 335,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 283,
									"end": 335,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 358,
									"end": 374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 358,
									"end": 374,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 423,
									"end": 437,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 423,
									"end": 437,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 423,
									"end": 437,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 420,
									"end": 454,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 420,
									"end": 454,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 420,
									"end": 454,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 450,
									"end": 451,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 448,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 440,
									"end": 452,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 420,
									"end": 454,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 420,
									"end": 454,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 488,
									"end": 494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 477,
									"end": 486,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 473,
									"end": 495,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 463,
									"end": 495,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 463,
									"end": 495,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 533,
									"end": 540,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 526,
									"end": 530,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 522,
									"end": 524,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 518,
									"end": 531,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 514,
									"end": 541,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 504,
									"end": 559,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 504,
									"end": 559,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 555,
									"end": 556,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 552,
									"end": 553,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 545,
									"end": 557,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 504,
									"end": 559,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 504,
									"end": 559,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 584,
									"end": 586,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 578,
									"end": 587,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 606,
									"end": 608,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 602,
									"end": 604,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 599,
									"end": 609,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 596,
									"end": 632,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 596,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 596,
									"end": 632,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 612,
									"end": 630,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 612,
									"end": 630,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 612,
									"end": 630,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 612,
									"end": 630,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 612,
									"end": 630,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 658,
									"end": 660,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 655,
									"end": 656,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 651,
									"end": 661,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 690,
									"end": 692,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 684,
									"end": 693,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 753,
									"end": 755,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 749,
									"end": 756,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 744,
									"end": 746,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 740,
									"end": 742,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 736,
									"end": 747,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 732,
									"end": 757,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 724,
									"end": 730,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 720,
									"end": 758,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 808,
									"end": 814,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 796,
									"end": 806,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 793,
									"end": 815,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 788,
									"end": 790,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 776,
									"end": 786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 773,
									"end": 791,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 770,
									"end": 816,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 767,
									"end": 839,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 767,
									"end": 839,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 767,
									"end": 839,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 819,
									"end": 837,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 819,
									"end": 837,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 819,
									"end": 837,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 819,
									"end": 837,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 819,
									"end": 837,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 855,
									"end": 857,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 848,
									"end": 870,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 905,
									"end": 923,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 905,
									"end": 923,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 905,
									"end": 923,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 939,
									"end": 954,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 954,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 939,
									"end": 954,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 939,
									"end": 954,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 981,
									"end": 992,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 981,
									"end": 992,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 981,
									"end": 992,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 977,
									"end": 997,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 977,
									"end": 997,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 977,
									"end": 997,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1028,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1028,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1028,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1006,
									"end": 1045,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1006,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1006,
									"end": 1045,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1041,
									"end": 1042,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1038,
									"end": 1039,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1031,
									"end": 1043,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1006,
									"end": 1045,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1006,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1065,
									"end": 1076,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1065,
									"end": 1076,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1065,
									"end": 1076,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1065,
									"end": 1076,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1085,
									"end": 1220,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1085,
									"end": 1220,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1096,
									"end": 1099,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1093,
									"end": 1108,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1085,
									"end": 1220,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1085,
									"end": 1220,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1085,
									"end": 1220,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1177,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1177,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1178,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1118,
									"end": 1130,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1118,
									"end": 1130,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1118,
									"end": 1130,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1118,
									"end": 1130,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1198,
									"end": 1210,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1198,
									"end": 1210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1198,
									"end": 1210,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1198,
									"end": 1210,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1085,
									"end": 1220,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1085,
									"end": 1220,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1085,
									"end": 1220,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1085,
									"end": 1220,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1239,
									"end": 1245,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1251,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1251,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1256,
									"end": 1383,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1256,
									"end": 1383,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1317,
									"end": 1327,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1312,
									"end": 1315,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1308,
									"end": 1328,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1305,
									"end": 1306,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1298,
									"end": 1329,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1348,
									"end": 1352,
									"name": "PUSH",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1345,
									"end": 1346,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1338,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1372,
									"end": 1376,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1369,
									"end": 1370,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1362,
									"end": 1377,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 1620,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1388,
									"end": 1620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1427,
									"end": 1430,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1465,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1448,
									"end": 1465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1448,
									"end": 1465,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1445,
									"end": 1585,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1445,
									"end": 1585,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1507,
									"end": 1517,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1502,
									"end": 1505,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1498,
									"end": 1518,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1495,
									"end": 1496,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1488,
									"end": 1519,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1542,
									"end": 1546,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1539,
									"end": 1540,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1532,
									"end": 1547,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1570,
									"end": 1574,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1567,
									"end": 1568,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1560,
									"end": 1575,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1445,
									"end": 1585,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1445,
									"end": 1585,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1612,
									"end": 1613,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1601,
									"end": 1614,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1614,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 1620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1388,
									"end": 1620,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1388,
									"end": 1620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122052d327cf7b1d461192100d100bab4abbc16f842bf55e483304665b7296a5264e64736f6c63430008120033",
									".code": [
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "609FF1BD"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "609FF1BD"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "9E7B8D61"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "A3EC138D"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "E2BA53F0"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "121B93F"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "13CF08B"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "2E4176CF"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "5C19A95C"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3166,
											"end": 3624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3166,
											"end": 3624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 791,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 791,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 398,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 373,
											"end": 398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 373,
											"end": 398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 429,
											"end": 431,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 432,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 414,
											"end": 432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 407,
											"end": 441,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 407,
											"end": 441,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 346,
											"end": 364,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 791,
											"end": 818,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 712,
											"end": 738,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 712,
											"end": 738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 712,
											"end": 738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 738,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 712,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 712,
											"end": 738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 712,
											"end": 738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 712,
											"end": 738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 712,
											"end": 738,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 712,
											"end": 738,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 712,
											"end": 738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 712,
											"end": 738,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 712,
											"end": 738,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 616,
											"end": 648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 616,
											"end": 648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 648,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 598,
											"end": 649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 598,
											"end": 649,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 586,
											"end": 588,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 712,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 452,
											"end": 655,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2071,
											"end": 2978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2071,
											"end": 2978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3810,
											"end": 4175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1070,
											"end": 1088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 951,
											"end": 1128,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1592,
											"end": 1947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1592,
											"end": 1947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 745,
											"end": 784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 745,
											"end": 784,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1383,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1383,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1440,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1441,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1417,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1399,
											"end": 1417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1442,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1478,
											"end": 1510,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1475,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1458,
											"end": 1476,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1451,
											"end": 1511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1544,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1527,
											"end": 1545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1348,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1330,
											"end": 1349,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1349,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1560,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4510,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4366,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4366,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4366,
											"end": 4510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3252,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3212,
											"end": 3232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3241,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3271,
											"end": 3284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3271,
											"end": 3284,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3271,
											"end": 3289,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 1951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1968,
											"end": 1986,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1968,
											"end": 1986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 1986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1961,
											"end": 1991,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "486173206E6F20726967687420746F20766F7465"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2007,
											"end": 2025,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2007,
											"end": 2025,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2025,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2050,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2085,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2067,
											"end": 2085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3333,
											"end": 3345,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3333,
											"end": 3345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3333,
											"end": 3345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3333,
											"end": 3345,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3333,
											"end": 3345,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3333,
											"end": 3345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2298,
											"end": 2300,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2339,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20B63932B0B23C903B37BA32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2356,
											"end": 2374,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2356,
											"end": 2374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2374,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2428,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2410,
											"end": 2428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2096,
											"end": 2434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3393,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3374,
											"end": 3386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3374,
											"end": 3393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3393,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3393,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3414,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3403,
											"end": 3414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3425,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3425,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3604,
											"end": 3617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3604,
											"end": 3617,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3604,
											"end": 3617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3604,
											"end": 3617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3417,
											"end": 3425,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3417,
											"end": 3425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3571,
											"end": 3590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3600,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3571,
											"end": 3600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3571,
											"end": 3617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3166,
											"end": 3624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 791,
											"end": 818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2158,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2190,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2190,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2178,
											"end": 2190,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2190,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3035,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3076,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3054,
											"end": 3072,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3054,
											"end": 3072,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3072,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3047,
											"end": 3077,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BA9030B63932B0B23C903B37BA32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3093,
											"end": 3111,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3093,
											"end": 3111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3111,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2833,
											"end": 3175,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2231,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2231,
											"end": 2247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2231,
											"end": 2247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3384,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3364,
											"end": 3385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3423,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 3401,
											"end": 3419,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3401,
											"end": 3419,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3492,
											"name": "PUSH",
											"source": 1,
											"value": "53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000"
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3493,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3180,
											"end": 3534,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2331,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2319,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2300,
											"end": 2319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2319,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2333,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2516,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2475,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2475,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2475,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3723,
											"end": 3744,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3782,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000"
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 3847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3864,
											"end": 3882,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3864,
											"end": 3882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3539,
											"end": 3888,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2516,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2516,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2525,
											"end": 2537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2649,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2649,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2634,
											"end": 2649,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2972,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2630,
											"end": 2972,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2771,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2772,
											"end": 2786,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2786,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2762,
											"end": 2787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2797,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2762,
											"end": 2797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2762,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2630,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2630,
											"end": 2972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2630,
											"end": 2972,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2972,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2630,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2961,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2961,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2928,
											"end": 2961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2961,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2928,
											"end": 2961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2961,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2928,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2961,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2630,
											"end": 2972,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2630,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3942,
											"end": 4169,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3942,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3963,
											"end": 3972,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3963,
											"end": 3979,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3979,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3942,
											"end": 4169,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3942,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3942,
											"end": 4169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4029,
											"end": 4045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4013,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4004,
											"end": 4016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4004,
											"end": 4026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4045,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4000,
											"end": 4159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4093,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4094,
											"end": 4095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4106,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4084,
											"end": 4106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4106,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 4144,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 4144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4159,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4000,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3981,
											"end": 3984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3942,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3942,
											"end": 4169,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3942,
											"end": 4169,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3942,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3942,
											"end": 4169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3897,
											"end": 4175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 4175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1695,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1680,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4235,
											"end": 4237,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4217,
											"end": 4238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4274,
											"end": 4276,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4254,
											"end": 4272,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4254,
											"end": 4272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4347,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C79206368616972706572736F6E2063616E206769766520726967687420"
										},
										{
											"begin": 4293,
											"end": 4311,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4293,
											"end": 4311,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A37903B37BA3297"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4364,
											"end": 4382,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4364,
											"end": 4382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4395,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4412,
											"end": 4431,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4412,
											"end": 4431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4033,
											"end": 4437,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1799,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1812,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1793,
											"end": 1812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4644,
											"end": 4646,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4647,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4683,
											"end": 4685,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4663,
											"end": 4681,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4663,
											"end": 4681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4663,
											"end": 4681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4748,
											"name": "PUSH",
											"source": 1,
											"value": "54686520766F74657220616C726561647920766F7465642E0000000000000000"
										},
										{
											"begin": 4702,
											"end": 4720,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4702,
											"end": 4720,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4702,
											"end": 4720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4695,
											"end": 4749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4766,
											"end": 4784,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4766,
											"end": 4784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4442,
											"end": 4790,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1886,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1900,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1872,
											"end": 1906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1906,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1906,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1872,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1940,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4510,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4366,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4470,
											"end": 4479,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4480,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4480,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4480,
											"end": 4497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4497,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4480,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4470,
											"end": 4498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4470,
											"end": 4503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4503,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 660,
											"end": 946,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 660,
											"end": 946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 774,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 760,
											"end": 769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 751,
											"end": 758,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 747,
											"end": 770,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 743,
											"end": 775,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 740,
											"end": 792,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 740,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 740,
											"end": 792,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 788,
											"end": 789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 786,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 778,
											"end": 790,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 740,
											"end": 792,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 740,
											"end": 792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 814,
											"end": 837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 814,
											"end": 837,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 866,
											"end": 897,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 866,
											"end": 897,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 856,
											"end": 898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 856,
											"end": 898,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 846,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 846,
											"end": 916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 912,
											"end": 913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 902,
											"end": 914,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 846,
											"end": 916,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 846,
											"end": 916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 935,
											"end": 940,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 660,
											"end": 946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 660,
											"end": 946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2566,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2439,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2510,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2495,
											"end": 2498,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2491,
											"end": 2511,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2481,
											"end": 2512,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2535,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2528,
											"end": 2529,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2521,
											"end": 2536,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2552,
											"end": 2553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2545,
											"end": 2560,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2571,
											"end": 2698,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2571,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2642,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2627,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2623,
											"end": 2643,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2667,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2660,
											"end": 2661,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2653,
											"end": 2668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2828,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2703,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2822,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2786,
											"end": 2822,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2802,
											"end": 2820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2828,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2828,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 4028,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3893,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 3935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3953,
											"end": 3970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3950,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3950,
											"end": 3993,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3973,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3973,
											"end": 3991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 3991,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3973,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4020,
											"end": 4021,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4009,
											"end": 4022,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 4022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 4028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/3_Ballot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"chairperson()": "2e4176cf",
							"delegate(address)": "5c19a95c",
							"giveRightToVote(address)": "9e7b8d61",
							"proposals(uint256)": "013cf08b",
							"vote(uint256)": "0121b93f",
							"voters(address)": "a3ec138d",
							"winnerName()": "e2ba53f0",
							"winningProposal()": "609ff1bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proposalNames\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"chairperson\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"giveRightToVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposal\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"voted\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"vote\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerName\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"winnerName_\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winningProposal_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements voting process along with vote delegation\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Create a new ballot to choose one of 'proposalNames'.\",\"params\":{\"proposalNames\":\"names of proposals\"}},\"delegate(address)\":{\"details\":\"Delegate your vote to the voter 'to'.\",\"params\":{\"to\":\"address to which vote is delegated\"}},\"giveRightToVote(address)\":{\"details\":\"Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.\",\"params\":{\"voter\":\"address of voter\"}},\"vote(uint256)\":{\"details\":\"Give your vote (including votes delegated to you) to proposal 'proposals[proposal].name'.\",\"params\":{\"proposal\":\"index of proposal in the proposals array\"}},\"winnerName()\":{\"details\":\"Calls winningProposal() function to get the index of the winner contained in the proposals array and then\",\"returns\":{\"winnerName_\":\"the name of the winner\"}},\"winningProposal()\":{\"details\":\"Computes the winning proposal taking all previous votes into account.\",\"returns\":{\"winningProposal_\":\"index of winning proposal in the proposals array\"}}},\"title\":\"Ballot\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/3_Ballot.sol\":\"Ballot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/3_Ballot.sol\":{\"keccak256\":\"0x83fe6b367c140a5c7678c420da454c8c3866ccae12da149c5da3ce6568d29b6c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5902f2f468a1f776b8f2cb9d584371af88e181954298af92402fca01d0dba3e7\",\"dweb:/ipfs/QmSUodhSvoorFL5m5CNqve8YvmuBpjCq17NbTf4GUX8ydw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 18,
								"contract": "contracts/3_Ballot.sol:Ballot",
								"label": "chairperson",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 23,
								"contract": "contracts/3_Ballot.sol:Ballot",
								"label": "voters",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Voter)11_storage)"
							},
							{
								"astId": 27,
								"contract": "contracts/3_Ballot.sol:Ballot",
								"label": "proposals",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(Proposal)16_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)16_storage)dyn_storage": {
								"base": "t_struct(Proposal)16_storage",
								"encoding": "dynamic_array",
								"label": "struct Ballot.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(Voter)11_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Ballot.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)11_storage"
							},
							"t_struct(Proposal)16_storage": {
								"encoding": "inplace",
								"label": "struct Ballot.Proposal",
								"members": [
									{
										"astId": 13,
										"contract": "contracts/3_Ballot.sol:Ballot",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 15,
										"contract": "contracts/3_Ballot.sol:Ballot",
										"label": "voteCount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Voter)11_storage": {
								"encoding": "inplace",
								"label": "struct Ballot.Voter",
								"members": [
									{
										"astId": 4,
										"contract": "contracts/3_Ballot.sol:Ballot",
										"label": "weight",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 6,
										"contract": "contracts/3_Ballot.sol:Ballot",
										"label": "voted",
										"offset": 0,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 8,
										"contract": "contracts/3_Ballot.sol:Ballot",
										"label": "delegate",
										"offset": 1,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 10,
										"contract": "contracts/3_Ballot.sol:Ballot",
										"label": "vote",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/3_Ballot.sol": {
				"ast": {
					"absolutePath": "contracts/3_Ballot.sol",
					"exportedSymbols": {
						"Ballot": [
							316
						]
					},
					"id": 317,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ballot",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "70:86:0",
								"text": " @title Ballot\n @dev Implements voting process along with vote delegation"
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "Ballot",
							"nameLocation": "166:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "weight",
											"nameLocation": "208:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "203:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "203:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "voted",
											"nameLocation": "268:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "263:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 5,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "263:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 8,
											"mutability": "mutable",
											"name": "delegate",
											"nameLocation": "330:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "322:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 7,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "322:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "vote",
											"nameLocation": "376:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "371:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "371:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nameLocation": "187:5:0",
									"nodeType": "StructDefinition",
									"scope": 316,
									"src": "180:240:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 16,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "607:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "599:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 12,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "599:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 15,
											"mutability": "mutable",
											"name": "voteCount",
											"nameLocation": "659:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "654:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 14,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "654:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nameLocation": "433:8:0",
									"nodeType": "StructDefinition",
									"scope": 316,
									"src": "426:280:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2e4176cf",
									"id": 18,
									"mutability": "mutable",
									"name": "chairperson",
									"nameLocation": "727:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "712:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 17,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "712:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a3ec138d",
									"id": 23,
									"mutability": "mutable",
									"name": "voters",
									"nameLocation": "778:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "745:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter)"
									},
									"typeName": {
										"id": 22,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 19,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "753:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "745:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 21,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 20,
												"name": "Voter",
												"nameLocations": [
													"764:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 11,
												"src": "764:5:0"
											},
											"referencedDeclaration": 11,
											"src": "764:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
												"typeString": "struct Ballot.Voter"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "013cf08b",
									"id": 27,
									"mutability": "mutable",
									"name": "proposals",
									"nameLocation": "809:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "791:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "Proposal",
												"nameLocations": [
													"791:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 16,
												"src": "791:8:0"
											},
											"referencedDeclaration": 16,
											"src": "791:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$16_storage_ptr",
												"typeString": "struct Ballot.Proposal"
											}
										},
										"id": 26,
										"nodeType": "ArrayTypeName",
										"src": "791:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal[]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "999:437:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 34,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1009:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 35,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1023:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1027:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1023:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1009:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "1009:24:0"
											},
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 39,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "1043:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 41,
															"indexExpression": {
																"id": 40,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "1050:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1043:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1063:6:0",
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "1043:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1072:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1043:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "1043:30:0"
											},
											{
												"body": {
													"id": 68,
													"nodeType": "Block",
													"src": "1132:298:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 61,
																					"name": "proposalNames",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 31,
																					"src": "1357:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 63,
																				"indexExpression": {
																					"id": 62,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 47,
																					"src": "1371:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1357:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 64,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1402:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 60,
																			"name": "Proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 16,
																			"src": "1324:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_Proposal_$16_storage_ptr_$",
																				"typeString": "type(struct Ballot.Proposal storage pointer)"
																			}
																		},
																		"id": 65,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"nameLocations": [
																			"1351:4:0",
																			"1391:9:0"
																		],
																		"names": [
																			"name",
																			"voteCount"
																		],
																		"nodeType": "FunctionCall",
																		"src": "1324:94:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$16_memory_ptr",
																			"typeString": "struct Ballot.Proposal memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Proposal_$16_memory_ptr",
																			"typeString": "struct Ballot.Proposal memory"
																		}
																	],
																	"expression": {
																		"id": 57,
																		"name": "proposals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "1309:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																			"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																		}
																	},
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1319:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "1309:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$16_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$16_storage_$returns$__$attached_to$_t_array$_t_struct$_Proposal_$16_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct Ballot.Proposal storage ref[] storage pointer,struct Ballot.Proposal storage ref)"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1309:110:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 67,
															"nodeType": "ExpressionStatement",
															"src": "1309:110:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 50,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1101:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 51,
															"name": "proposalNames",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "1105:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1119:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1105:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1101:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 69,
												"initializationExpression": {
													"assignments": [
														47
													],
													"declarations": [
														{
															"constant": false,
															"id": 47,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1094:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 69,
															"src": "1089:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 46,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1089:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 49,
													"initialValue": {
														"hexValue": "30",
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1098:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1089:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1127:3:0",
														"subExpression": {
															"id": 54,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "1127:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 56,
													"nodeType": "ExpressionStatement",
													"src": "1127:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1084:346:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "825:125:0",
										"text": " @dev Create a new ballot to choose one of 'proposalNames'.\n @param proposalNames names of proposals"
									},
									"id": 71,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "proposalNames",
												"nameLocation": "984:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "967:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 29,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "967:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 30,
													"nodeType": "ArrayTypeName",
													"src": "967:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:32:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "999:0:0"
									},
									"scope": 316,
									"src": "955:481:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "1639:308:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 78,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1670:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1674:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1670:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 80,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "1684:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1670:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206368616972706572736f6e2063616e206769766520726967687420746f20766f74652e",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1709:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95",
																"typeString": "literal_string \"Only chairperson can give right to vote.\""
															},
															"value": "Only chairperson can give right to vote."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95",
																"typeString": "literal_string \"Only chairperson can give right to vote.\""
															}
														],
														"id": 77,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1649:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1649:112:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "1649:112:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1792:20:0",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 86,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "1793:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																			"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																		}
																	},
																	"id": 88,
																	"indexExpression": {
																		"id": 87,
																		"name": "voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 74,
																		"src": "1800:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1793:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$11_storage",
																		"typeString": "struct Ballot.Voter storage ref"
																	}
																},
																"id": 89,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1807:5:0",
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 6,
																"src": "1793:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520766f74657220616c726561647920766f7465642e",
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1826:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d",
																"typeString": "literal_string \"The voter already voted.\""
															},
															"value": "The voter already voted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d",
																"typeString": "literal_string \"The voter already voted.\""
															}
														],
														"id": 85,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1771:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1771:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1771:91:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 95,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "1880:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																			"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																		}
																	},
																	"id": 97,
																	"indexExpression": {
																		"id": 96,
																		"name": "voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 74,
																		"src": "1887:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1880:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$11_storage",
																		"typeString": "struct Ballot.Voter storage ref"
																	}
																},
																"id": 98,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1894:6:0",
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1880:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1904:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1880:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 94,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1872:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1872:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "1872:34:0"
											},
											{
												"expression": {
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 103,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "1916:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 105,
															"indexExpression": {
																"id": 104,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "1923:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1916:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1930:6:0",
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "1916:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1939:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1916:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "1916:24:0"
											}
										]
									},
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "1442:145:0",
										"text": " @dev Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.\n @param voter address of voter"
									},
									"functionSelector": "9e7b8d61",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "giveRightToVote",
									"nameLocation": "1601:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "1625:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1617:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1617:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1616:15:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1639:0:0"
									},
									"scope": 316,
									"src": "1592:355:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "2108:870:0",
										"statements": [
											{
												"assignments": [
													119
												],
												"declarations": [
													{
														"constant": false,
														"id": 119,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "2132:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 206,
														"src": "2118:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"id": 118,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 117,
																"name": "Voter",
																"nameLocations": [
																	"2118:5:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 11,
																"src": "2118:5:0"
															},
															"referencedDeclaration": 11,
															"src": "2118:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 124,
												"initialValue": {
													"baseExpression": {
														"id": 120,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "2141:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 123,
													"indexExpression": {
														"expression": {
															"id": 121,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2148:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2152:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2148:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2141:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$11_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2118:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2177:13:0",
															"subExpression": {
																"expression": {
																	"id": 126,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "2178:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																		"typeString": "struct Ballot.Voter storage pointer"
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2185:5:0",
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 6,
																"src": "2178:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520616c726561647920766f7465642e",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2192:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f",
																"typeString": "literal_string \"You already voted.\""
															},
															"value": "You already voted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f",
																"typeString": "literal_string \"You already voted.\""
															}
														],
														"id": 125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2169:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2169:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2169:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 133,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "2231:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 134,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2237:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2241:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2237:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2231:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2249:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947",
																"typeString": "literal_string \"Self-delegation is disallowed.\""
															},
															"value": "Self-delegation is disallowed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947",
																"typeString": "literal_string \"Self-delegation is disallowed.\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2223:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2223:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "2223:59:0"
											},
											{
												"body": {
													"id": 164,
													"nodeType": "Block",
													"src": "2335:181:0",
													"statements": [
														{
															"expression": {
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 149,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "2349:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 150,
																			"name": "voters",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 23,
																			"src": "2354:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																				"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																			}
																		},
																		"id": 152,
																		"indexExpression": {
																			"id": 151,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 114,
																			"src": "2361:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2354:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$11_storage",
																			"typeString": "struct Ballot.Voter storage ref"
																		}
																	},
																	"id": 153,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2365:8:0",
																	"memberName": "delegate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 8,
																	"src": "2354:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2349:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 155,
															"nodeType": "ExpressionStatement",
															"src": "2349:24:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 157,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 114,
																			"src": "2459:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 158,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2465:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2469:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2465:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "2459:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "466f756e64206c6f6f7020696e2064656c65676174696f6e2e",
																		"id": 161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2477:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c",
																			"typeString": "literal_string \"Found loop in delegation.\""
																		},
																		"value": "Found loop in delegation."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c",
																			"typeString": "literal_string \"Found loop in delegation.\""
																		}
																	],
																	"id": 156,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2451:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2451:54:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 163,
															"nodeType": "ExpressionStatement",
															"src": "2451:54:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 140,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "2300:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 142,
															"indexExpression": {
																"id": 141,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "2307:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2300:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2311:8:0",
														"memberName": "delegate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "2300:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2331:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 144,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2323:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2323:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2300:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "WhileStatement",
												"src": "2293:223:0"
											},
											{
												"expression": {
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 166,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2525:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 168,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2532:5:0",
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "2525:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2540:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2525:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2525:19:0"
											},
											{
												"expression": {
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 172,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2554:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 174,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2561:8:0",
														"memberName": "delegate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "2554:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 175,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "2572:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2554:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "2554:20:0"
											},
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "delegate_",
														"nameLocation": "2598:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 206,
														"src": "2584:23:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"id": 179,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 178,
																"name": "Voter",
																"nameLocations": [
																	"2584:5:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 11,
																"src": "2584:5:0"
															},
															"referencedDeclaration": 11,
															"src": "2584:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"baseExpression": {
														"id": 181,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "2610:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 183,
													"indexExpression": {
														"id": 182,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "2617:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2610:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$11_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2584:36:0"
											},
											{
												"condition": {
													"expression": {
														"id": 185,
														"name": "delegate_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "2634:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
															"typeString": "struct Ballot.Voter storage pointer"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2644:5:0",
													"memberName": "voted",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "2634:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 204,
													"nodeType": "Block",
													"src": "2831:141:0",
													"statements": [
														{
															"expression": {
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 197,
																		"name": "delegate_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 180,
																		"src": "2928:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																			"typeString": "struct Ballot.Voter storage pointer"
																		}
																	},
																	"id": 199,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2938:6:0",
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4,
																	"src": "2928:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 200,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 119,
																		"src": "2948:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																			"typeString": "struct Ballot.Voter storage pointer"
																		}
																	},
																	"id": 201,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2955:6:0",
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4,
																	"src": "2948:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2928:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 203,
															"nodeType": "ExpressionStatement",
															"src": "2928:33:0"
														}
													]
												},
												"id": 205,
												"nodeType": "IfStatement",
												"src": "2630:342:0",
												"trueBody": {
													"id": 196,
													"nodeType": "Block",
													"src": "2651:174:0",
													"statements": [
														{
															"expression": {
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 187,
																			"name": "proposals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 27,
																			"src": "2762:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																				"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																			}
																		},
																		"id": 190,
																		"indexExpression": {
																			"expression": {
																				"id": 188,
																				"name": "delegate_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 180,
																				"src": "2772:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																					"typeString": "struct Ballot.Voter storage pointer"
																				}
																			},
																			"id": 189,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2782:4:0",
																			"memberName": "vote",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 10,
																			"src": "2772:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2762:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$16_storage",
																			"typeString": "struct Ballot.Proposal storage ref"
																		}
																	},
																	"id": 191,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2788:9:0",
																	"memberName": "voteCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 15,
																	"src": "2762:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 192,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 119,
																		"src": "2801:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																			"typeString": "struct Ballot.Voter storage pointer"
																		}
																	},
																	"id": 193,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2808:6:0",
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4,
																	"src": "2801:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2762:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 195,
															"nodeType": "ExpressionStatement",
															"src": "2762:52:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "1953:113:0",
										"text": " @dev Delegate your vote to the voter 'to'.\n @param to address to which vote is delegated"
									},
									"functionSelector": "5c19a95c",
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nameLocation": "2080:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2097:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2089:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2089:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2088:12:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2108:0:0"
									},
									"scope": 316,
									"src": "2071:907:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "3202:422:0",
										"statements": [
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3226:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 256,
														"src": "3212:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"id": 214,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 213,
																"name": "Voter",
																"nameLocations": [
																	"3212:5:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 11,
																"src": "3212:5:0"
															},
															"referencedDeclaration": 11,
															"src": "3212:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 220,
												"initialValue": {
													"baseExpression": {
														"id": 216,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "3235:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 219,
													"indexExpression": {
														"expression": {
															"id": 217,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3242:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3246:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3242:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3235:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$11_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3212:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 222,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "3271:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																		"typeString": "struct Ballot.Voter storage pointer"
																	}
																},
																"id": 223,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3278:6:0",
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "3271:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3288:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3271:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "486173206e6f20726967687420746f20766f7465",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3291:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e",
																"typeString": "literal_string \"Has no right to vote\""
															},
															"value": "Has no right to vote"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e",
																"typeString": "literal_string \"Has no right to vote\""
															}
														],
														"id": 221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3263:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3263:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "3263:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3332:13:0",
															"subExpression": {
																"expression": {
																	"id": 230,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "3333:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																		"typeString": "struct Ballot.Voter storage pointer"
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3340:5:0",
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 6,
																"src": "3333:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920766f7465642e",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3347:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84",
																"typeString": "literal_string \"Already voted.\""
															},
															"value": "Already voted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84",
																"typeString": "literal_string \"Already voted.\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3324:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3324:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "3324:40:0"
											},
											{
												"expression": {
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 236,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3374:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 238,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3381:5:0",
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "3374:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3389:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3374:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "3374:19:0"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 242,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3403:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3410:4:0",
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "3403:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 245,
														"name": "proposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3417:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3403:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "3403:22:0"
											},
											{
												"expression": {
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 248,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "3571:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 250,
															"indexExpression": {
																"id": 249,
																"name": "proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "3581:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3571:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$16_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3591:9:0",
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 15,
														"src": "3571:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 252,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3611:6:0",
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "3604:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3571:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "3571:46:0"
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "2984:177:0",
										"text": " @dev Give your vote (including votes delegated to you) to proposal 'proposals[proposal].name'.\n @param proposal index of proposal in the proposals array"
									},
									"functionSelector": "0121b93f",
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nameLocation": "3175:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "proposal",
												"nameLocation": "3185:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "3180:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3180:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:15:0"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3202:0:0"
									},
									"scope": 316,
									"src": "3166:458:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "3897:278:0",
										"statements": [
											{
												"assignments": [
													264
												],
												"declarations": [
													{
														"constant": false,
														"id": 264,
														"mutability": "mutable",
														"name": "winningVoteCount",
														"nameLocation": "3912:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 299,
														"src": "3907:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 263,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3907:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 266,
												"initialValue": {
													"hexValue": "30",
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3931:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3907:25:0"
											},
											{
												"body": {
													"id": 297,
													"nodeType": "Block",
													"src": "3986:183:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 278,
																			"name": "proposals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 27,
																			"src": "4004:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																				"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																			}
																		},
																		"id": 280,
																		"indexExpression": {
																			"id": 279,
																			"name": "p",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 268,
																			"src": "4014:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4004:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$16_storage",
																			"typeString": "struct Ballot.Proposal storage ref"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4017:9:0",
																	"memberName": "voteCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 15,
																	"src": "4004:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 282,
																	"name": "winningVoteCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "4029:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4004:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 296,
															"nodeType": "IfStatement",
															"src": "4000:159:0",
															"trueBody": {
																"id": 295,
																"nodeType": "Block",
																"src": "4047:112:0",
																"statements": [
																	{
																		"expression": {
																			"id": 289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 284,
																				"name": "winningVoteCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 264,
																				"src": "4065:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 285,
																						"name": "proposals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 27,
																						"src": "4084:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																							"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																						}
																					},
																					"id": 287,
																					"indexExpression": {
																						"id": 286,
																						"name": "p",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 268,
																						"src": "4094:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4084:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Proposal_$16_storage",
																						"typeString": "struct Ballot.Proposal storage ref"
																					}
																				},
																				"id": 288,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4097:9:0",
																				"memberName": "voteCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 15,
																				"src": "4084:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4065:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 290,
																		"nodeType": "ExpressionStatement",
																		"src": "4065:41:0"
																	},
																	{
																		"expression": {
																			"id": 293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 291,
																				"name": "winningProposal_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 261,
																				"src": "4124:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 292,
																				"name": "p",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 268,
																				"src": "4143:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4124:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 294,
																		"nodeType": "ExpressionStatement",
																		"src": "4124:20:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 271,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "3959:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 272,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3963:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3973:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3963:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3959:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 298,
												"initializationExpression": {
													"assignments": [
														268
													],
													"declarations": [
														{
															"constant": false,
															"id": 268,
															"mutability": "mutable",
															"name": "p",
															"nameLocation": "3952:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 298,
															"src": "3947:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 267,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3947:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 270,
													"initialValue": {
														"hexValue": "30",
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3956:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3947:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3981:3:0",
														"subExpression": {
															"id": 275,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "3981:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 277,
													"nodeType": "ExpressionStatement",
													"src": "3981:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3942:227:0"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "3630:175:0",
										"text": " @dev Computes the winning proposal taking all previous votes into account.\n @return winningProposal_ index of winning proposal in the proposals array"
									},
									"functionSelector": "609ff1bd",
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "winningProposal",
									"nameLocation": "3819:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3834:2:0"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "winningProposal_",
												"nameLocation": "3875:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3870:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3870:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3869:23:0"
									},
									"scope": 316,
									"src": "3810:365:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "4446:64:0",
										"statements": [
											{
												"expression": {
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "winnerName_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "4456:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 307,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "4470:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 310,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 308,
																	"name": "winningProposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "4480:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4480:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4470:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$16_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 311,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4499:4:0",
														"memberName": "name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "4470:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4456:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "4456:47:0"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "4181:180:0",
										"text": " @dev Calls winningProposal() function to get the index of the winner contained in the proposals array and then\n @return winnerName_ the name of the winner"
									},
									"functionSelector": "e2ba53f0",
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "winnerName",
									"nameLocation": "4375:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4385:2:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "winnerName_",
												"nameLocation": "4429:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4421:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4420:21:0"
									},
									"scope": 316,
									"src": "4366:144:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 317,
							"src": "157:4355:0",
							"usedErrors": []
						}
					],
					"src": "37:4475:0"
				},
				"id": 0
			}
		}
	}
}