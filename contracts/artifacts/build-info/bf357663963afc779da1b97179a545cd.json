{
	"id": "bf357663963afc779da1b97179a545cd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Mapping.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\ncontract Hello {\n    mapping (address=>uint) balances;\n\n    mapping (address => mapping (address=>bool)) approved;\n\n    function foo() external {\n        balances[msg.sender] = 100;\n\n        delete balances[msg.sender];\n        // default value: default value of type (uint -> 0, bool -> false)\n        \n        //nestedMappings\n        approved[msg.sender][msg.sender] = true;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Mapping.sol": {
				"Hello": {
					"abi": [
						{
							"inputs": [],
							"name": "foo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Mapping.sol\":57:442  contract Hello {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Mapping.sol\":57:442  contract Hello {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc2985578\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Mapping.sol\":177:440  function foo() external {... */\n    tag_3:\n      tag_4\n        /* \"contracts/Mapping.sol\":220:230  msg.sender */\n      caller\n        /* \"contracts/Mapping.sol\":211:219  balances */\n      0x00\n        /* \"contracts/Mapping.sol\":211:231  balances[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Mapping.sol\":248:275  delete balances[msg.sender] */\n      dup4\n      swap1\n      sstore\n      0x01\n        /* \"contracts/Mapping.sol\":394:414  approved[msg.sender] */\n      dup1\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/Mapping.sol\":394:426  approved[msg.sender][msg.sender] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Mapping.sol\":394:433  approved[msg.sender][msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Mapping.sol\":177:440  function foo() external {... */\n      jump\n    tag_4:\n      stop\n\n    auxdata: 0xa2646970667358221220d781116fd0b5acd770228de7a89de35d0e4304dab69b506230b6c14ffd39a1b664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5060918061001b5f395ff3fe6080604052348015600e575f80fd5b50600436106026575f3560e01c8063c298557814602a575b5f80fd5b6059335f908152602081815260408083208390556001808352818420909252909120805460ff19169091179055565b00fea2646970667358221220d781116fd0b5acd770228de7a89de35d0e4304dab69b506230b6c14ffd39a1b664736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x91 DUP1 PUSH2 0x1B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC2985578 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x59 CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x1 DUP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST STOP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 DUP2 GT PUSH16 0xD0B5ACD770228DE7A89DE35D0E4304DA 0xB6 SWAP12 POP PUSH3 0x30B6C1 0x4F REVERT CODECOPY LOG1 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "57:385:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@foo_38": {
									"entryPoint": null,
									"id": 38,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106026575f3560e01c8063c298557814602a575b5f80fd5b6059335f908152602081815260408083208390556001808352818420909252909120805460ff19169091179055565b00fea2646970667358221220d781116fd0b5acd770228de7a89de35d0e4304dab69b506230b6c14ffd39a1b664736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC2985578 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x59 CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x1 DUP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST STOP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 DUP2 GT PUSH16 0xD0B5ACD770228DE7A89DE35D0E4304DA 0xB6 SWAP12 POP PUSH3 0x30B6C1 0x4F REVERT CODECOPY LOG1 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "57:385:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;177:263;;220:10;211:8;:20;;;;;;;;;;;248:27;;;-1:-1:-1;394:20:0;;;;;;:32;;;;;;:39;;-1:-1:-1;;394:39:0;;;;;;177:263;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "29000",
								"executionCost": "79",
								"totalCost": "29079"
							},
							"external": {
								"foo()": "29532"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 442,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 442,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 442,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 442,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 442,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 442,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 442,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 442,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 442,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 442,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 442,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 442,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 442,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 442,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 442,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 442,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 442,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 442,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d781116fd0b5acd770228de7a89de35d0e4304dab69b506230b6c14ffd39a1b664736f6c63430008140033",
									".code": [
										{
											"begin": 57,
											"end": 442,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 442,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 442,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 442,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 442,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 442,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 442,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 442,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 442,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 442,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 442,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 442,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 442,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 442,
											"name": "PUSH",
											"source": 0,
											"value": "C2985578"
										},
										{
											"begin": 57,
											"end": 442,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 442,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 442,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 442,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 177,
											"end": 440,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 177,
											"end": 440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 220,
											"end": 230,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 211,
											"end": 219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 211,
											"end": 231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 211,
											"end": 231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 211,
											"end": 231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 211,
											"end": 231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 211,
											"end": 231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 211,
											"end": 231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 211,
											"end": 231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 211,
											"end": 231,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 211,
											"end": 231,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 248,
											"end": 275,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 248,
											"end": 275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 275,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 394,
											"end": 414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 414,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 394,
											"end": 414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 394,
											"end": 414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 394,
											"end": 414,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 394,
											"end": 414,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 394,
											"end": 426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 426,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 394,
											"end": 426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 394,
											"end": 426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 394,
											"end": 426,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 394,
											"end": 433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 433,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 394,
											"end": 433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 394,
											"end": 433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 394,
											"end": 433,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 394,
											"end": 433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 394,
											"end": 433,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 177,
											"end": 440,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 177,
											"end": 440,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 177,
											"end": 440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 440,
											"name": "STOP",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/Mapping.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"foo()": "c2985578"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"foo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mapping.sol\":\"Hello\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Mapping.sol\":{\"keccak256\":\"0x6321253bfdae3acb70f4a19ed9af365e4dad61604aafd8572ae74f64e412f0df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e792743ae654a18f2195f74b6a69e20e65ee814ebc1f93d0713ba0018fe468cf\",\"dweb:/ipfs/QmNxdv8HTVqCtm99m9p8Mt1P2BfNUydEvU7Yq9vWHFvDA6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "contracts/Mapping.sol:Hello",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 11,
								"contract": "contracts/Mapping.sol:Hello",
								"label": "approved",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Mapping.sol": {
				"ast": {
					"absolutePath": "contracts/Mapping.sol",
					"exportedSymbols": {
						"Hello": [
							39
						]
					},
					"id": 40,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Hello",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "Hello",
							"nameLocation": "66:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "102:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "78:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "87:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "78:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "96:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "approved",
									"nameLocation": "162:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "117:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 10,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "126:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "117:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 9,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 7,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "146:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "137:23:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 8,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "155:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "201:239:0",
										"statements": [
											{
												"expression": {
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 14,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "211:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 17,
														"indexExpression": {
															"expression": {
																"id": 15,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "220:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "224:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "220:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "211:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "234:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "211:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "211:26:0"
											},
											{
												"expression": {
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "248:27:0",
													"subExpression": {
														"baseExpression": {
															"id": 21,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "255:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 24,
														"indexExpression": {
															"expression": {
																"id": 22,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "264:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "268:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "264:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "255:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "248:27:0"
											},
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 27,
																"name": "approved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "394:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 32,
															"indexExpression": {
																"expression": {
																	"id": 28,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "403:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "407:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "403:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "394:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 33,
														"indexExpression": {
															"expression": {
																"id": 30,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "415:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "419:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "415:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "394:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "429:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "394:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "394:39:0"
											}
										]
									},
									"functionSelector": "c2985578",
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "foo",
									"nameLocation": "186:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "189:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "201:0:0"
									},
									"scope": 39,
									"src": "177:263:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 40,
							"src": "57:385:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:410:0"
				},
				"id": 0
			}
		}
	}
}